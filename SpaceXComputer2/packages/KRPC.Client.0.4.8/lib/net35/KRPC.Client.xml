<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KRPC.Client-net35</name>
    </assembly>
    <members>
        <member name="T:KRPC.Client.Attributes.RPCAttribute">
             <summary>
             Attribute attached to methods and properties that invoke remote procedure calls.
             </summary>
            </member>
        <member name="P:KRPC.Client.Attributes.RPCAttribute.Service">
             <summary>
             The remote service the method/property calls.
             </summary>
            </member>
        <member name="P:KRPC.Client.Attributes.RPCAttribute.Procedure">
             <summary>
             The remote procedure the method/property calls.
             </summary>
            </member>
        <member name="M:KRPC.Client.Attributes.RPCAttribute.#ctor(System.String,System.String)">
             <summary>
             Construct a RPC attribute.
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.ISet`1">
            
             A set </member>
        <member name="T:KRPC.Client.Compatibility.ITuple">
             <summary>
             Interface for tuples.
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`1">
             <summary>
             A tuple with 1 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`1.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`1.#ctor(`0)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`1.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`1.Equals(KRPC.Client.Compatibility.Tuple{`0})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`1.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`2">
             <summary>
             A tuple with 2 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`2.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`2.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`2.#ctor(`0,`1)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`2.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`2.Equals(KRPC.Client.Compatibility.Tuple{`0,`1})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`2.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`3">
             <summary>
             A tuple with 3 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`3.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`3.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`3.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`3.#ctor(`0,`1,`2)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`3.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`3.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`3.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`4">
             <summary>
             A tuple with 4 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`4.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`4.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`4.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`4.Item4">
             <summary>
             Get/set the value of element 4
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`4.#ctor(`0,`1,`2,`3)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`4.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`4.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2,`3})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`4.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`5">
             <summary>
             A tuple with 5 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`5.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`5.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`5.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`5.Item4">
             <summary>
             Get/set the value of element 4
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`5.Item5">
             <summary>
             Get/set the value of element 5
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`5.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`5.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2,`3,`4})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`5.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`6">
             <summary>
             A tuple with 6 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`6.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`6.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`6.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`6.Item4">
             <summary>
             Get/set the value of element 4
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`6.Item5">
             <summary>
             Get/set the value of element 5
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`6.Item6">
             <summary>
             Get/set the value of element 6
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`6.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`6.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2,`3,`4,`5})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`6.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`7">
             <summary>
             A tuple with 7 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item4">
             <summary>
             Get/set the value of element 4
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item5">
             <summary>
             Get/set the value of element 5
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item6">
             <summary>
             Get/set the value of element 6
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`7.Item7">
             <summary>
             Get/set the value of element 7
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`7.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`7.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2,`3,`4,`5,`6})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`7.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`8">
             <summary>
             A tuple with 8 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item4">
             <summary>
             Get/set the value of element 4
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item5">
             <summary>
             Get/set the value of element 5
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item6">
             <summary>
             Get/set the value of element 6
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item7">
             <summary>
             Get/set the value of element 7
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`8.Item8">
             <summary>
             Get/set the value of element 8
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`8.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`8.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2,`3,`4,`5,`6,`7})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`8.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple`9">
             <summary>
             A tuple with 9 elements
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item1">
             <summary>
             Get/set the value of element 1
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item2">
             <summary>
             Get/set the value of element 2
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item3">
             <summary>
             Get/set the value of element 3
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item4">
             <summary>
             Get/set the value of element 4
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item5">
             <summary>
             Get/set the value of element 5
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item6">
             <summary>
             Get/set the value of element 6
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item7">
             <summary>
             Get/set the value of element 7
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item8">
             <summary>
             Get/set the value of element 8
             </summary>
            </member>
        <member name="P:KRPC.Client.Compatibility.Tuple`9.Item9">
             <summary>
             Get/set the value of element 9
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`9.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
             <summary>
             Create a tuple with the given values as its elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`9.Equals(System.Object)">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`9.Equals(KRPC.Client.Compatibility.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
             <summary>
             Compare two tuples for equality
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple`9.GetHashCode">
             <summary>
             Hash the tuple
             </summary>
            </member>
        <member name="T:KRPC.Client.Compatibility.Tuple">
             <summary>
             Static functions for constructing tuples
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``1(``0)">
             <summary>
             Construct a tuple with 1 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``2(``0,``1)">
             <summary>
             Construct a tuple with 2 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``3(``0,``1,``2)">
             <summary>
             Construct a tuple with 3 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``4(``0,``1,``2,``3)">
             <summary>
             Construct a tuple with 4 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``5(``0,``1,``2,``3,``4)">
             <summary>
             Construct a tuple with 5 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
             <summary>
             Construct a tuple with 6 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
             <summary>
             Construct a tuple with 7 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
             <summary>
             Construct a tuple with 8 elements
             </summary>
            </member>
        <member name="M:KRPC.Client.Compatibility.Tuple.Create``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
             <summary>
             Construct a tuple with 9 elements
             </summary>
            </member>
        <member name="T:KRPC.Client.Connection">
             <summary>
             A connection to the kRPC server. All interaction with kRPC is performed via an instance of this class.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.#ctor(System.String,System.Net.IPAddress,System.Int32,System.Int32)">
             <summary>
             Connect to a kRPC server on the specified IP address and port numbers. If
             streamPort is 0, does not connect to the stream server.
             Passes an optional name to the server to identify the client (up to 32 bytes of UTF-8 encoded text).
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.Finalize">
             <summary>
             Finalize the connection.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.Dispose">
             <summary>
             Dispose the connection.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.Dispose(System.Boolean)">
             <summary>
             Dispose the connection.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.AddStream``1(System.Linq.Expressions.LambdaExpression)">
             <summary>
             Create a new stream from the given lambda expression.
             Returns a stream object that can be used to obtain the latest value of the stream.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.AddStream``1(System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>
             See <see ref="AddStream" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.Invoke(System.String,System.String,System.Collections.Generic.IList{Google.Protobuf.ByteString})">
             <summary>
             Invoke a remote procedure.
             Should not be called directly. This interface is used by service client stubs.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.GetCall``1(System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>
             Return the procedure call message for a remote procedure call.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.GetCall(System.Linq.Expressions.LambdaExpression)">
             <summary>
             Return the procedure call message for a remote procedure call.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.ReadMessageData(System.IO.Stream,System.Byte[]@,System.Threading.EventWaitHandle)">
             <summary>
             Read the data from a message from the given stream into the given buffer.
             May reallocate the buffer if it is too small to receive the message.
             Returns the lenght of the message in bytes.
             If a stopEvent is specified, this method will return 0 if the event is triggered.
             </summary>
            </member>
        <member name="M:KRPC.Client.Connection.AddExceptionType(System.String,System.String,System.Type)">
             <summary>
             Add an exception type to the client.
             Should only be called by generated client stubs.
             </summary>
            </member>
        <member name="T:KRPC.Client.ConnectionException">
             <summary>
             Thrown when a error occurs connecting to a server.
             </summary>
            </member>
        <member name="M:KRPC.Client.ConnectionException.#ctor">
             <summary>
             Construct an RPCException with no message.
             </summary>
            </member>
        <member name="M:KRPC.Client.ConnectionException.#ctor(System.String)">
             <summary>
             Construct an RPCException with the given message.
             </summary>
            </member>
        <member name="M:KRPC.Client.ConnectionException.#ctor(System.String,System.Exception)">
             <summary>
             Construct an RPCException with the given message and inner exception.
             </summary>
            </member>
        <member name="M:KRPC.Client.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Construct an RPCException with the given serialization info and streaming context.
             </summary>
            </member>
        <member name="T:KRPC.Client.Encoder">
             <summary>
             Methods for encoding and decoding messages for kRPCs protocolo bufers over TCP/IP protocol.
             </summary>
            </member>
        <member name="M:KRPC.Client.Encoder.Encode(System.Object,System.Type)">
             <summary>
             Encode an object of the given type using the protocol buffer encoding scheme.
             Should not be called directly. This interface is used by service client stubs.
             </summary>
            </member>
        <member name="M:KRPC.Client.Encoder.Decode(Google.Protobuf.ByteString,System.Type,KRPC.Client.IConnection)">
             <summary>
             Decode a value of the given type.
             Should not be called directly. This interface is used by service client stubs.
             </summary>
            </member>
        <member name="T:KRPC.Client.Event">
             <summary>
             Object representing an event.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.Equals(System.Object)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.Equals(KRPC.Client.Event)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.op_Equality(KRPC.Client.Event,KRPC.Client.Event)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.op_Inequality(KRPC.Client.Event,KRPC.Client.Event)">
             <summary>
             Returns true if the objects are not equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.Start">
             <summary>
             Start the event
             </summary>
            </member>
        <member name="P:KRPC.Client.Event.Condition">
             <summary>
             Condition variable that is notified when the event occurs.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.Wait(System.Double)">
             <summary>
             Wait until the event occurs.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.AddCallback(System.Action)">
             <summary>
             Add a callback that is invoked whenever the stream is updated.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.RemoveCallback(System.Int32)">
             <summary>
             Remove a callback, based on its key.
             </summary>
            </member>
        <member name="P:KRPC.Client.Event.Stream">
             <summary>
             The underlyling stream for the event.
             </summary>
            </member>
        <member name="M:KRPC.Client.Event.Remove">
             <summary>
             Remove the event from the server.
             </summary>
            </member>
        <member name="T:KRPC.Client.IConnection">
             <summary>
             A connection to the KRPC server
             </summary>
            </member>
        <member name="M:KRPC.Client.IConnection.Invoke(System.String,System.String,System.Collections.Generic.IList{Google.Protobuf.ByteString})">
             <summary>
             Invoke a remote procedure call
             </summary>
            </member>
        <member name="M:KRPC.Client.IConnection.AddExceptionType(System.String,System.String,System.Type)">
             <summary>
             Add an exception type
             </summary>
            </member>
        <member name="T:KRPC.Client.RPCException">
             <summary>
             Thrown when an error occurs executing a remote procedure.
             </summary>
            </member>
        <member name="M:KRPC.Client.RPCException.#ctor">
             <summary>
             Construct an RPCException with no message.
             </summary>
            </member>
        <member name="M:KRPC.Client.RPCException.#ctor(System.String)">
             <summary>
             Construct an RPCException with the given message.
             </summary>
            </member>
        <member name="M:KRPC.Client.RPCException.#ctor(System.String,System.Exception)">
             <summary>
             Construct an RPCException with the given message and inner exception.
             </summary>
            </member>
        <member name="M:KRPC.Client.RPCException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Construct an RPCException with the given serialization info and streaming context.
             </summary>
            </member>
        <member name="T:KRPC.Client.RemoteObject">
             <summary>
             Base class for remote objects.
             </summary>
            </member>
        <member name="P:KRPC.Client.RemoteObject.connection">
             <summary>
             A connection to the server where the object is stored.
             </summary>
            </member>
        <member name="P:KRPC.Client.RemoteObject.id">
             <summary>
             The unique identifier for the object on the server.
             </summary>
            </member>
        <member name="M:KRPC.Client.RemoteObject.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct a remote object.
             </summary>
            </member>
        <member name="M:KRPC.Client.RemoteObject.Equals(KRPC.Client.RemoteObject)">
             <summary>
             Check if remote objects are equivalent.
             </summary>
            </member>
        <member name="M:KRPC.Client.RemoteObject.Equals(System.Object)">
             <summary>
             Check if this remote object is equivalent to the given object.
             </summary>
            </member>
        <member name="M:KRPC.Client.RemoteObject.GetHashCode">
             <summary>
             Hash the remote object.
             </summary>
            </member>
        <member name="M:KRPC.Client.RemoteObject.op_Equality(KRPC.Client.RemoteObject,KRPC.Client.RemoteObject)">
             <summary>
             Check if two remote objects are equivalent.
             </summary>
            </member>
        <member name="M:KRPC.Client.RemoteObject.op_Inequality(KRPC.Client.RemoteObject,KRPC.Client.RemoteObject)">
             <summary>
             Check if two remote objects are not equivalent.
             </summary>
            </member>
        <member name="T:KRPC.Client.Stream`1">
             <summary>
             Object representing a stream.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.Equals(System.Object)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.Equals(KRPC.Client.Stream{`0})">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.op_Equality(KRPC.Client.Stream{`0},KRPC.Client.Stream{`0})">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.op_Inequality(KRPC.Client.Stream{`0},KRPC.Client.Stream{`0})">
             <summary>
             Returns true if the objects are not equal.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.Start(System.Boolean)">
             <summary>
             Start the stream.
             </summary>
            </member>
        <member name="P:KRPC.Client.Stream`1.Rate">
             <summary>
             The rate of the stream, in Hertz.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.Get">
             <summary>
             The most recent value of the stream.
             </summary>
            </member>
        <member name="P:KRPC.Client.Stream`1.Condition">
             <summary>
             Condition variable that is notified when the streams value changes.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.Wait(System.Double)">
             <summary>
             Wait until the next stream update.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.AddCallback(System.Action{`0})">
             <summary>
             Add a callback that is invoked whenever the stream is updated.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.RemoveCallback(System.Int32)">
             <summary>
             Remove a callback, based on its tag.
             </summary>
            </member>
        <member name="M:KRPC.Client.Stream`1.Remove">
             <summary>
             Remove the stream from the server.
             </summary>
            </member>
        <member name="T:KRPC.Schema.KRPC.KrpcReflection">
             <summary>Holder for reflection information generated from protobuf/krpc.proto</summary>
            </member>
        <member name="P:KRPC.Schema.KRPC.KrpcReflection.Descriptor">
             <summary>File descriptor for protobuf/krpc.proto</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ConnectionRequest.TypeFieldNumber">
             <summary>Field number for the "type" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ConnectionRequest.ClientNameFieldNumber">
             <summary>Field number for the "client_name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ConnectionRequest.ClientIdentifierFieldNumber">
             <summary>Field number for the "client_identifier" field.</summary>
            </member>
        <member name="T:KRPC.Schema.KRPC.ConnectionRequest.Types">
             <summary>Container for nested types declared in the ConnectionRequest message type.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ConnectionResponse.StatusFieldNumber">
             <summary>Field number for the "status" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ConnectionResponse.MessageFieldNumber">
             <summary>Field number for the "message" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ConnectionResponse.ClientIdentifierFieldNumber">
             <summary>Field number for the "client_identifier" field.</summary>
            </member>
        <member name="T:KRPC.Schema.KRPC.ConnectionResponse.Types">
             <summary>Container for nested types declared in the ConnectionResponse message type.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Request.CallsFieldNumber">
             <summary>Field number for the "calls" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureCall.ServiceFieldNumber">
             <summary>Field number for the "service" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureCall.ProcedureFieldNumber">
             <summary>Field number for the "procedure" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureCall.ServiceIdFieldNumber">
             <summary>Field number for the "service_id" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureCall.ProcedureIdFieldNumber">
             <summary>Field number for the "procedure_id" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureCall.ArgumentsFieldNumber">
             <summary>Field number for the "arguments" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Argument.PositionFieldNumber">
             <summary>Field number for the "position" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Argument.ValueFieldNumber">
             <summary>Field number for the "value" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Response.ErrorFieldNumber">
             <summary>Field number for the "error" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Response.ResultsFieldNumber">
             <summary>Field number for the "results" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureResult.ErrorFieldNumber">
             <summary>Field number for the "error" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.ProcedureResult.ValueFieldNumber">
             <summary>Field number for the "value" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Error.ServiceFieldNumber">
             <summary>Field number for the "service" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Error.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Error.DescriptionFieldNumber">
             <summary>Field number for the "description" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Error.StackTraceFieldNumber">
             <summary>Field number for the "stack_trace" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.StreamUpdate.ResultsFieldNumber">
             <summary>Field number for the "results" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.StreamResult.IdFieldNumber">
             <summary>Field number for the "id" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.StreamResult.ResultFieldNumber">
             <summary>Field number for the "result" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Services.Services_FieldNumber">
             <summary>Field number for the "services" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Service.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Service.ProceduresFieldNumber">
             <summary>Field number for the "procedures" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Service.ClassesFieldNumber">
             <summary>Field number for the "classes" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Service.EnumerationsFieldNumber">
             <summary>Field number for the "enumerations" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Service.ExceptionsFieldNumber">
             <summary>Field number for the "exceptions" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Service.DocumentationFieldNumber">
             <summary>Field number for the "documentation" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Procedure.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Procedure.ParametersFieldNumber">
             <summary>Field number for the "parameters" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Procedure.ReturnTypeFieldNumber">
             <summary>Field number for the "return_type" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Procedure.ReturnIsNullableFieldNumber">
             <summary>Field number for the "return_is_nullable" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Procedure.GameScenesFieldNumber">
             <summary>Field number for the "game_scenes" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Procedure.DocumentationFieldNumber">
             <summary>Field number for the "documentation" field.</summary>
            </member>
        <member name="T:KRPC.Schema.KRPC.Procedure.Types">
             <summary>Container for nested types declared in the Procedure message type.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Parameter.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Parameter.TypeFieldNumber">
             <summary>Field number for the "type" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Parameter.DefaultValueFieldNumber">
             <summary>Field number for the "default_value" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Class.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Class.DocumentationFieldNumber">
             <summary>Field number for the "documentation" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Enumeration.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Enumeration.ValuesFieldNumber">
             <summary>Field number for the "values" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Enumeration.DocumentationFieldNumber">
             <summary>Field number for the "documentation" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.EnumerationValue.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.EnumerationValue.ValueFieldNumber">
             <summary>Field number for the "value" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.EnumerationValue.DocumentationFieldNumber">
             <summary>Field number for the "documentation" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Exception.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Exception.DocumentationFieldNumber">
             <summary>Field number for the "documentation" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.CodeFieldNumber">
             <summary>Field number for the "code" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.ServiceFieldNumber">
             <summary>Field number for the "service" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.NameFieldNumber">
             <summary>Field number for the "name" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.Types_FieldNumber">
             <summary>Field number for the "types" field.</summary>
            </member>
        <member name="T:KRPC.Schema.KRPC.Type.Types">
             <summary>Container for nested types declared in the Type message type.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.Types.TypeCode.Double">
             <summary>
             Values
             </summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.Types.TypeCode.Class">
             <summary>
             Objects
             </summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.Types.TypeCode.Event">
             <summary>
             Messages
             </summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Type.Types.TypeCode.Tuple">
             <summary>
             Collections
             </summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Tuple.ItemsFieldNumber">
             <summary>Field number for the "items" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.List.ItemsFieldNumber">
             <summary>Field number for the "items" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Set.ItemsFieldNumber">
             <summary>Field number for the "items" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Dictionary.EntriesFieldNumber">
             <summary>Field number for the "entries" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.DictionaryEntry.KeyFieldNumber">
             <summary>Field number for the "key" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.DictionaryEntry.ValueFieldNumber">
             <summary>Field number for the "value" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Stream.IdFieldNumber">
             <summary>Field number for the "id" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Event.StreamFieldNumber">
             <summary>Field number for the "stream" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.VersionFieldNumber">
             <summary>Field number for the "version" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.BytesReadFieldNumber">
             <summary>Field number for the "bytes_read" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.BytesWrittenFieldNumber">
             <summary>Field number for the "bytes_written" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.BytesReadRateFieldNumber">
             <summary>Field number for the "bytes_read_rate" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.BytesWrittenRateFieldNumber">
             <summary>Field number for the "bytes_written_rate" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.RpcsExecutedFieldNumber">
             <summary>Field number for the "rpcs_executed" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.RpcRateFieldNumber">
             <summary>Field number for the "rpc_rate" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.OneRpcPerUpdateFieldNumber">
             <summary>Field number for the "one_rpc_per_update" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.MaxTimePerUpdateFieldNumber">
             <summary>Field number for the "max_time_per_update" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.AdaptiveRateControlFieldNumber">
             <summary>Field number for the "adaptive_rate_control" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.BlockingRecvFieldNumber">
             <summary>Field number for the "blocking_recv" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.RecvTimeoutFieldNumber">
             <summary>Field number for the "recv_timeout" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.TimePerRpcUpdateFieldNumber">
             <summary>Field number for the "time_per_rpc_update" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.PollTimePerRpcUpdateFieldNumber">
             <summary>Field number for the "poll_time_per_rpc_update" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.ExecTimePerRpcUpdateFieldNumber">
             <summary>Field number for the "exec_time_per_rpc_update" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.StreamRpcsFieldNumber">
             <summary>Field number for the "stream_rpcs" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.StreamRpcsExecutedFieldNumber">
             <summary>Field number for the "stream_rpcs_executed" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.StreamRpcRateFieldNumber">
             <summary>Field number for the "stream_rpc_rate" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.Status.TimePerStreamUpdateFieldNumber">
             <summary>Field number for the "time_per_stream_update" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.MultiplexedRequest.ConnectionRequestFieldNumber">
             <summary>Field number for the "connection_request" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.MultiplexedRequest.RequestFieldNumber">
             <summary>Field number for the "request" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.MultiplexedResponse.ResponseFieldNumber">
             <summary>Field number for the "response" field.</summary>
            </member>
        <member name="F:KRPC.Schema.KRPC.MultiplexedResponse.StreamUpdateFieldNumber">
             <summary>Field number for the "stream_update" field.</summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.ExtensionMethods">
             <summary>
             Extension methods for KRPC service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ExtensionMethods.KRPC(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the KRPC service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.Service">
             <summary>
             KRPC service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.AddEvent(KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Create an event from a server side expression.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.AddStream(KRPC.Schema.KRPC.ProcedureCall,System.Boolean)">
             <summary>
             Add a streaming request and return its identifier.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.GetClientID">
             <summary>
             Returns the identifier for the current client.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.GetClientName">
             <summary>
             Returns the name of the current client.
             This is an empty string if the client has no name.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.GetServices">
             <summary>
             Returns information on all services, procedures, classes, properties etc. provided by the server.
             Can be used by client libraries to automatically create functionality such as stubs.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.GetStatus">
             <summary>
             Returns some information about the server, such as the version.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.RemoveStream(System.UInt64)">
             <summary>
             Remove a streaming request.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.SetStreamRate(System.UInt64,System.Single)">
             <summary>
             Set the update rate for a stream in Hz.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Service.StartStream(System.UInt64)">
             <summary>
             Start a previously added streaming request.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KRPC.Service.Clients">
             <summary>
             A list of RPC clients that are currently connected to the server.
             Each entry in the list is a clients identifier, name and address.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KRPC.Service.CurrentGameScene">
             <summary>
             Get the current game scene.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KRPC.Service.Paused">
             <summary>
             Whether the game is paused.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.GameScene">
             <summary>
             The game scene. See <see cref="M:KRPC.CurrentGameScene" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KRPC.GameScene.SpaceCenter">
             <summary>
             The game scene showing the Kerbal Space Center buildings.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KRPC.GameScene.Flight">
             <summary>
             The game scene showing a vessel in flight (or on the launchpad/runway).
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KRPC.GameScene.TrackingStation">
             <summary>
             The tracking station.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KRPC.GameScene.EditorVAB">
             <summary>
             The Vehicle Assembly Building.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KRPC.GameScene.EditorSPH">
             <summary>
             The Space Plane Hangar.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.ArgumentException">
             <summary>
             A method was invoked where at least one of the passed arguments does not
             meet the parameter specification of the method.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentException.#ctor">
             <summary>
             Construct an ArgumentException with no message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentException.#ctor(System.String)">
             <summary>
             Construct an ArgumentException with the given message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentException.#ctor(System.String,System.Exception)">
             <summary>
             Construct an ArgumentException with the given message and inner exception.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Construct an ArgumentException with the given serialization info and streaming context.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.ArgumentNullException">
             <summary>
             A null reference was passed to a method that does not accept it as a valid argument.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentNullException.#ctor">
             <summary>
             Construct an ArgumentNullException with no message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentNullException.#ctor(System.String)">
             <summary>
             Construct an ArgumentNullException with the given message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentNullException.#ctor(System.String,System.Exception)">
             <summary>
             Construct an ArgumentNullException with the given message and inner exception.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Construct an ArgumentNullException with the given serialization info and streaming context.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.ArgumentOutOfRangeException">
             <summary>
             The value of an argument is outside the allowable range of values as defined by the invoked method.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentOutOfRangeException.#ctor">
             <summary>
             Construct an ArgumentOutOfRangeException with no message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentOutOfRangeException.#ctor(System.String)">
             <summary>
             Construct an ArgumentOutOfRangeException with the given message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
             <summary>
             Construct an ArgumentOutOfRangeException with the given message and inner exception.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Construct an ArgumentOutOfRangeException with the given serialization info and streaming context.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.InvalidOperationException">
             <summary>
             A method call was made to a method that is invalid
             given the current state of the object.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.InvalidOperationException.#ctor">
             <summary>
             Construct an InvalidOperationException with no message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.InvalidOperationException.#ctor(System.String)">
             <summary>
             Construct an InvalidOperationException with the given message.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.InvalidOperationException.#ctor(System.String,System.Exception)">
             <summary>
             Construct an InvalidOperationException with the given message and inner exception.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Construct an InvalidOperationException with the given serialization info and streaming context.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.Expression">
             <summary>
             A server side expression.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Add(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Numerical addition.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Aggregate(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Applies an accumulator function over a sequence.
             </summary>
             <returns>The accumulated value.</returns>
             <param name="arg">The collection.</param>
             <param name="func">The accumulator function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.AggregateWithSeed(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Applies an accumulator function over a sequence, with a given seed.
             </summary>
             <returns>The accumulated value.</returns>
             <param name="arg">The collection.</param>
             <param name="seed">The seed value.</param>
             <param name="func">The accumulator function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.All(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Determine whether all items in a collection satisfy a boolean predicate.
             </summary>
             <returns>Whether all items satisfy the predicate.</returns>
             <param name="arg">The collection.</param>
             <param name="predicate">The predicate function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.And(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Boolean and operator.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Any(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Determine whether any item in a collection satisfies a boolean predicate.
             </summary>
             <returns>Whether any item satisfies the predicate.</returns>
             <param name="arg">The collection.</param>
             <param name="predicate">The predicate function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Average(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Minimum of all elements in a collection.
             </summary>
             <returns>The minimum elements in the collection.</returns>
             <param name="arg">The list or set.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Call(KRPC.Client.IConnection,KRPC.Schema.KRPC.ProcedureCall)">
             <summary>
             An RPC call.
             </summary>
             <param name="call"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Cast(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Type)">
             <summary>
             Perform a cast to the given type.
             </summary>
             <param name="arg"></param>
             <param name="type">Type to cast the argument to.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Concat(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Concatenate two sequences.
             </summary>
             <returns>The first sequence followed by the second sequence.</returns>
             <param name="arg1">The first sequence.</param>
             <param name="arg2">The second sequence.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ConstantBool(KRPC.Client.IConnection,System.Boolean)">
             <summary>
             A constant value of boolean type.
             </summary>
             <param name="value"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ConstantDouble(KRPC.Client.IConnection,System.Double)">
             <summary>
             A constant value of double precision floating point type.
             </summary>
             <param name="value"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ConstantFloat(KRPC.Client.IConnection,System.Single)">
             <summary>
             A constant value of single precision floating point type.
             </summary>
             <param name="value"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ConstantInt(KRPC.Client.IConnection,System.Int32)">
             <summary>
             A constant value of integer type.
             </summary>
             <param name="value"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ConstantString(KRPC.Client.IConnection,System.String)">
             <summary>
             A constant value of string type.
             </summary>
             <param name="value"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Contains(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Determine if a collection contains a value.
             </summary>
             <returns>Whether the collection contains a value.</returns>
             <param name="arg">The collection.</param>
             <param name="value">The value to look for.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Count(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Number of elements in a collection.
             </summary>
             <returns>The number of elements in the collection.</returns>
             <param name="arg">The list, set or dictionary.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.CreateDictionary(KRPC.Client.IConnection,System.Collections.Generic.IList{KRPC.Client.Services.KRPC.Expression},System.Collections.Generic.IList{KRPC.Client.Services.KRPC.Expression})">
             <summary>
             Construct a dictionary, from a list of corresponding keys and values.
             </summary>
             <returns>The dictionary.</returns>
             <param name="keys">The keys. Should all be of the same type.</param>
             <param name="values">The values. Should all be of the same type.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.CreateList(KRPC.Client.IConnection,System.Collections.Generic.IList{KRPC.Client.Services.KRPC.Expression})">
             <summary>
             Construct a list.
             </summary>
             <returns>The list.</returns>
             <param name="values">The value. Should all be of the same type.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.CreateSet(KRPC.Client.IConnection,KRPC.Client.Compatibility.ISet{KRPC.Client.Services.KRPC.Expression})">
             <summary>
             Construct a set.
             </summary>
             <returns>The set.</returns>
             <param name="values">The values. Should all be of the same type.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.CreateTuple(KRPC.Client.IConnection,System.Collections.Generic.IList{KRPC.Client.Services.KRPC.Expression})">
             <summary>
             Construct a tuple.
             </summary>
             <returns>The tuple.</returns>
             <param name="elements">The elements.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Divide(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Numerical division.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Equal(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Equality comparison.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ExclusiveOr(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Boolean exclusive-or operator.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Function(KRPC.Client.IConnection,System.Collections.Generic.IList{KRPC.Client.Services.KRPC.Expression},KRPC.Client.Services.KRPC.Expression)">
             <summary>
             A function.
             </summary>
             <returns>A function.</returns>
             <param name="parameters">The parameters of the function.</param>
             <param name="body">The body of the function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Get(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Access an element in a tuple, list or dictionary.
             </summary>
             <returns>The element.</returns>
             <param name="arg">The tuple, list or dictionary.</param>
             <param name="index">The index of the element to access.
             A zero indexed integer for a tuple or list, or a key for a dictionary.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.GreaterThan(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Greater than numerical comparison.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.GreaterThanOrEqual(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Greater than or equal numerical comparison.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Invoke(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,System.Collections.Generic.IDictionary{System.String,KRPC.Client.Services.KRPC.Expression})">
             <summary>
             A function call.
             </summary>
             <returns>A function call.</returns>
             <param name="function">The function to call.</param>
             <param name="args">The arguments to call the function with.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.LeftShift(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Bitwise left shift.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.LessThan(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Less than numerical comparison.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.LessThanOrEqual(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Less than or equal numerical comparison.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Max(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Maximum of all elements in a collection.
             </summary>
             <returns>The maximum elements in the collection.</returns>
             <param name="arg">The list or set.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Min(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Minimum of all elements in a collection.
             </summary>
             <returns>The minimum elements in the collection.</returns>
             <param name="arg">The list or set.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Modulo(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Numerical modulo operator.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <returns>The remainder of arg0 divided by arg1</returns>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Multiply(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Numerical multiplication.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Not(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Boolean negation operator.
             </summary>
             <param name="arg"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.NotEqual(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Inequality comparison.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Or(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Boolean or operator.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.OrderBy(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Order a collection using a key function.
             </summary>
             <returns>The ordered collection.</returns>
             <param name="arg">The collection to order.</param>
             <param name="key">A function that takes a value from the collection and generates a key to sort on.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Parameter(KRPC.Client.IConnection,System.String,KRPC.Client.Services.KRPC.Type)">
             <summary>
             A named parameter of type double.
             </summary>
             <returns>A named parameter.</returns>
             <param name="name">The name of the parameter.</param>
             <param name="type">The type of the parameter.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Power(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Numerical power operator.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <returns>arg0 raised to the power of arg1, with type of arg0</returns>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.RightShift(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Bitwise right shift.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Select(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Run a function on every element in the collection.
             </summary>
             <returns>The modified collection.</returns>
             <param name="arg">The list or set.</param>
             <param name="func">The function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Subtract(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Numerical subtraction.
             </summary>
             <param name="arg0"></param>
             <param name="arg1"></param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Sum(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Sum all elements of a collection.
             </summary>
             <returns>The sum of the elements in the collection.</returns>
             <param name="arg">The list or set.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ToList(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Convert a collection to a list.
             </summary>
             <returns>The collection as a list.</returns>
             <param name="arg">The collection.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.ToSet(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Convert a collection to a set.
             </summary>
             <returns>The collection as a set.</returns>
             <param name="arg">The collection.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Expression.Where(KRPC.Client.IConnection,KRPC.Client.Services.KRPC.Expression,KRPC.Client.Services.KRPC.Expression)">
             <summary>
             Run a function on every element in the collection.
             </summary>
             <returns>The modified collection.</returns>
             <param name="arg">The list or set.</param>
             <param name="func">The function.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="T:KRPC.Client.Services.KRPC.Type">
             <summary>
             A server side expression.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Type.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Type.Bool(KRPC.Client.IConnection)">
             <summary>
             Bool type.
             </summary>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Type.Double(KRPC.Client.IConnection)">
             <summary>
             Double type.
             </summary>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Type.Float(KRPC.Client.IConnection)">
             <summary>
             Float type.
             </summary>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Type.Int(KRPC.Client.IConnection)">
             <summary>
             Int type.
             </summary>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.KRPC.Type.String(KRPC.Client.IConnection)">
             <summary>
             String type.
             </summary>
             <param name="connection">A connection object.</param>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ExtensionMethods">
             <summary>
             Extension methods for SpaceCenter service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ExtensionMethods.SpaceCenter(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the SpaceCenter service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Service">
             <summary>
             SpaceCenter service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.CanRailsWarpAt(System.Int32)">
             <summary>
             Returns <c>true</c> if regular "on-rails" time warp can be used, at the specified warp
             <paramref name="factor" />. The maximum time warp rate is limited by various things,
             including how close the active vessel is to a planet. See
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">the KSP wiki</a>
             for details.
             </summary>
             <param name="factor">The warp factor to check.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.ClearTarget">
             <summary>
             Clears the current target.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.LaunchVessel(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Launch a vessel.
             </summary>
             <param name="craftDirectory">Name of the directory in the current saves
             "Ships" directory, that contains the craft file.
             For example <c>"VAB"</c> or <c>"SPH"</c>.</param>
             <param name="name">Name of the vessel to launch. This is the name of the ".craft" file
             in the save directory, without the ".craft" file extension.</param>
             <param name="launchSite">Name of the launch site. For example <c>"LaunchPad"</c> or
             <c>"Runway"</c>.</param>
             <param name="recover">If true and there is a vessel on the launch site,
             recover it before launching.</param>
             <remarks>
             Throws an exception if any of the games pre-flight checks fail.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.LaunchVesselFromSPH(System.String,System.Boolean)">
             <summary>
             Launch a new vessel from the SPH onto the runway.
             </summary>
             <param name="name">Name of the vessel to launch.</param>
             <param name="recover">If true and there is a vessel on the runway,
             recover it before launching.</param>
             <remarks>
             This is equivalent to calling <see cref="M:SpaceCenter.LaunchVessel" /> with the craft directory
             set to "SPH" and the launch site set to "Runway".
             Throws an exception if any of the games pre-flight checks fail.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.LaunchVesselFromVAB(System.String,System.Boolean)">
             <summary>
             Launch a new vessel from the VAB onto the launchpad.
             </summary>
             <param name="name">Name of the vessel to launch.</param>
             <param name="recover">If true and there is a vessel on the launch pad,
             recover it before launching.</param>
             <remarks>
             This is equivalent to calling <see cref="M:SpaceCenter.LaunchVessel" /> with the craft directory
             set to "VAB" and the launch site set to "LaunchPad".
             Throws an exception if any of the games pre-flight checks fail.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.LaunchableVessels(System.String)">
             <summary>
             Returns a list of vessels from the given <paramref name="craftDirectory" />
             that can be launched.
             </summary>
             <param name="craftDirectory">Name of the directory in the current saves
             "Ships" directory. For example <c>"VAB"</c> or <c>"SPH"</c>.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.Load(System.String)">
             <summary>
             Load the game with the given name.
             This will create a load a save file called <c>name.sfs</c> from the folder of the
             current save game.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.Quickload">
             <summary>
             Load a quicksave.
             </summary>
             <remarks>
             This is the same as calling <see cref="M:SpaceCenter.Load" /> with the name "quicksave".
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.Quicksave">
             <summary>
             Save a quicksave.
             </summary>
             <remarks>
             This is the same as calling <see cref="M:SpaceCenter.Save" /> with the name "quicksave".
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.RaycastDistance(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Cast a ray from a given position in a given direction, and return the distance to the hit point.
             If no hit occurs, returns infinity.
             </summary>
             <param name="position">Position, as a vector, of the origin of the ray.</param>
             <param name="direction">Direction of the ray, as a unit vector.</param>
             <param name="referenceFrame">The reference frame that the position and direction are in.</param>
             <returns>The distance to the hit, in meters, or infinity if there was no hit.</returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.RaycastPart(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Cast a ray from a given position in a given direction, and return the part that it hits.
             If no hit occurs, returns <c>null</c>.
             </summary>
             <param name="position">Position, as a vector, of the origin of the ray.</param>
             <param name="direction">Direction of the ray, as a unit vector.</param>
             <param name="referenceFrame">The reference frame that the position and direction are in.</param>
             <returns>The part that was hit or <c>null</c> if there was no hit.</returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.Save(System.String)">
             <summary>
             Save the game with a given name.
             This will create a save file called <c>name.sfs</c> in the folder of the
             current save game.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.TransformDirection(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Converts a direction from one reference frame to another.
             </summary>
             <param name="direction">Direction, as a vector, in reference frame
             <paramref name="from" />. </param>
             <param name="from">The reference frame that the direction is in.</param>
             <param name="to">The reference frame to covert the direction to.</param>
             <returns>The corresponding direction, as a vector, in reference frame
             <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.TransformPosition(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Converts a position from one reference frame to another.
             </summary>
             <param name="position">Position, as a vector, in reference frame
             <paramref name="from" />.</param>
             <param name="from">The reference frame that the position is in.</param>
             <param name="to">The reference frame to covert the position to.</param>
             <returns>The corresponding position, as a vector, in reference frame
             <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.TransformRotation(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Converts a rotation from one reference frame to another.
             </summary>
             <param name="rotation">Rotation, as a quaternion of the form <math>(x, y, z, w)</math>,
             in reference frame <paramref name="from" />.</param>
             <param name="from">The reference frame that the rotation is in.</param>
             <param name="to">The reference frame to covert the rotation to.</param>
             <returns>The corresponding rotation, as a quaternion of the form
             <math>(x, y, z, w)</math>, in reference frame <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.TransformVelocity(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Converts a velocity (acting at the specified position) from one reference frame
             to another. The position is required to take the relative angular velocity of the
             reference frames into account.
             </summary>
             <param name="position">Position, as a vector, in reference frame
             <paramref name="from" />.</param>
             <param name="velocity">Velocity, as a vector that points in the direction of travel and
             whose magnitude is the speed in meters per second, in reference frame
             <paramref name="from" />.</param>
             <param name="from">The reference frame that the position and velocity are in.</param>
             <param name="to">The reference frame to covert the velocity to.</param>
             <returns>The corresponding velocity, as a vector, in reference frame
             <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Service.WarpTo(System.Double,System.Single,System.Single)">
             <summary>
             Uses time acceleration to warp forward to a time in the future, specified
             by universal time <paramref name="ut" />. This call blocks until the desired
             time is reached. Uses regular "on-rails" or physical time warp as appropriate.
             For example, physical time warp is used when the active vessel is traveling
             through an atmosphere. When using regular "on-rails" time warp, the warp
             rate is limited by <paramref name="maxRailsRate" />, and when using physical
             time warp, the warp rate is limited by <paramref name="maxPhysicsRate" />.
             </summary>
             <param name="ut">The universal time to warp to, in seconds.</param>
             <param name="maxRailsRate">The maximum warp rate in regular "on-rails" time warp.
             </param>
             <param name="maxPhysicsRate">The maximum warp rate in physical time warp.</param>
             <returns>When the time warp is complete.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.ActiveVessel">
             <summary>
             The currently active vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Bodies">
             <summary>
             A dictionary of all celestial bodies (planets, moons, etc.) in the game,
             keyed by the name of the body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Camera">
             <summary>
             An object that can be used to control the camera.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.ContractManager">
             <summary>
             The contract manager.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.FARAvailable">
             <summary>
             Whether <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a> is installed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Funds">
             <summary>
             The current amount of funds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.G">
             <summary>
             The value of the <a href="https://en.wikipedia.org/wiki/Gravitational_constant">
             gravitational constant</a> G in <math>N(m/kg)^2</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.GameMode">
             <summary>
             The current mode the game is in.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.MaximumRailsWarpFactor">
             <summary>
             The current maximum regular "on-rails" warp factor that can be set.
             A value between 0 and 7 inclusive. See
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">the KSP wiki</a>
             for details.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Navball">
             <summary>
             Whether the navball is visible.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.PhysicsWarpFactor">
             <summary>
             The physical time warp rate. A value between 0 and 3 inclusive. 0 means
             no time warp. Returns 0 if regular "on-rails" time warp is active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.RailsWarpFactor">
             <summary>
             The time warp rate, using regular "on-rails" time warp. A value between
             0 and 7 inclusive. 0 means no time warp. Returns 0 if physical time warp
             is active.
            
             If requested time warp factor cannot be set, it will be set to the next
             lowest possible value. For example, if the vessel is too close to a
             planet. See <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">
             the KSP wiki</a> for details.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Reputation">
             <summary>
             The current amount of reputation.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Science">
             <summary>
             The current amount of science.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.TargetBody">
             <summary>
             The currently targeted celestial body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.TargetDockingPort">
             <summary>
             The currently targeted docking port.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.TargetVessel">
             <summary>
             The currently targeted vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.UIVisible">
             <summary>
             Whether the UI is visible.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.UT">
             <summary>
             The current universal time in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.Vessels">
             <summary>
             A list of all the vessels in the game.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.WarpFactor">
             <summary>
             The current warp factor. This is the index of the rate at which time
             is passing for either regular "on-rails" or physical time warp. Returns 0
             if time warp is not active. When in on-rails time warp, this is equal to
             <see cref="M:SpaceCenter.RailsWarpFactor" />, and in physics time warp, this is equal to
             <see cref="M:SpaceCenter.PhysicsWarpFactor" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.WarpMode">
             <summary>
             The current time warp mode. Returns <see cref="M:SpaceCenter.WarpMode.None" /> if time
             warp is not active, <see cref="M:SpaceCenter.WarpMode.Rails" /> if regular "on-rails" time warp
             is active, or <see cref="M:SpaceCenter.WarpMode.Physics" /> if physical time warp is active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.WarpRate">
             <summary>
             The current warp rate. This is the rate at which time is passing for
             either on-rails or physical time warp. For example, a value of 10 means
             time is passing 10x faster than normal. Returns 1 if time warp is not
             active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Service.WaypointManager">
             <summary>
             The waypoint manager.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.AntennaState">
             <summary>
             The state of an antenna. See <see cref="M:SpaceCenter.Antenna.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.AntennaState.Deployed">
             <summary>
             Antenna is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.AntennaState.Retracted">
             <summary>
             Antenna is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.AntennaState.Deploying">
             <summary>
             Antenna is being deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.AntennaState.Retracting">
             <summary>
             Antenna is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.AntennaState.Broken">
             <summary>
             Antenna is broken.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CameraMode">
             <summary>
             See <see cref="M:SpaceCenter.Camera.Mode" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.Automatic">
             <summary>
             The camera is showing the active vessel, in "auto" mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.Free">
             <summary>
             The camera is showing the active vessel, in "free" mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.Chase">
             <summary>
             The camera is showing the active vessel, in "chase" mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.Locked">
             <summary>
             The camera is showing the active vessel, in "locked" mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.Orbital">
             <summary>
             The camera is showing the active vessel, in "orbital" mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.IVA">
             <summary>
             The Intra-Vehicular Activity view is being shown.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CameraMode.Map">
             <summary>
             The map view is being shown.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CargoBayState">
             <summary>
             The state of a cargo bay. See <see cref="M:SpaceCenter.CargoBay.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CargoBayState.Open">
             <summary>
             Cargo bay is fully open.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CargoBayState.Closed">
             <summary>
             Cargo bay closed and locked.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CargoBayState.Opening">
             <summary>
             Cargo bay is opening.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CargoBayState.Closing">
             <summary>
             Cargo bay is closing.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CommLinkType">
             <summary>
             The type of a communication link.
             See <see cref="M:SpaceCenter.CommLink.Type" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CommLinkType.Home">
             <summary>
             Link is to a base station on Kerbin.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CommLinkType.Control">
             <summary>
             Link is to a control source, for example a manned spacecraft.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CommLinkType.Relay">
             <summary>
             Link is to a relay satellite.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ContractState">
             <summary>
             The state of a contract. See <see cref="M:SpaceCenter.Contract.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Active">
             <summary>
             The contract is active.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Canceled">
             <summary>
             The contract has been canceled.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Completed">
             <summary>
             The contract has been completed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.DeadlineExpired">
             <summary>
             The deadline for the contract has expired.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Declined">
             <summary>
             The contract has been declined.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Failed">
             <summary>
             The contract has been failed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Generated">
             <summary>
             The contract has been generated.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Offered">
             <summary>
             The contract has been offered to the player.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.OfferExpired">
             <summary>
             The contract was offered to the player, but the offer expired.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ContractState.Withdrawn">
             <summary>
             The contract has been withdrawn.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ControlInputMode">
             <summary>
             See <see cref="M:SpaceCenter.Control.InputMode" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlInputMode.Additive">
             <summary>
             Control inputs are added to the vessels current control inputs.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlInputMode.Override">
             <summary>
             Control inputs (when they are non-zero) override the vessels current control inputs.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ControlSource">
             <summary>
             The control source of a vessel.
             See <see cref="M:SpaceCenter.Control.Source" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlSource.Kerbal">
             <summary>
             Vessel is controlled by a Kerbal.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlSource.Probe">
             <summary>
             Vessel is controlled by a probe core.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlSource.None">
             <summary>
             Vessel is not controlled.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ControlState">
             <summary>
             The control state of a vessel.
             See <see cref="M:SpaceCenter.Control.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlState.Full">
             <summary>
             Full controllable.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlState.Partial">
             <summary>
             Partially controllable.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ControlState.None">
             <summary>
             Not controllable.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CrewMemberType">
             <summary>
             The type of a crew member.
             See <see cref="M:SpaceCenter.CrewMember.Type" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CrewMemberType.Applicant">
             <summary>
             An applicant for crew.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CrewMemberType.Crew">
             <summary>
             Rocket crew.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CrewMemberType.Tourist">
             <summary>
             A tourist.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.CrewMemberType.Unowned">
             <summary>
             An unowned crew member.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.DockingPortState">
             <summary>
             The state of a docking port. See <see cref="M:SpaceCenter.DockingPort.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.DockingPortState.Ready">
             <summary>
             The docking port is ready to dock to another docking port.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.DockingPortState.Docked">
             <summary>
             The docking port is docked to another docking port, or docked to
             another part (from the VAB/SPH).
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.DockingPortState.Docking">
             <summary>
             The docking port is very close to another docking port,
             but has not docked. It is using magnetic force to acquire a solid dock.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.DockingPortState.Undocking">
             <summary>
             The docking port has just been undocked from another docking port,
             and is disabled until it moves away by a sufficient distance
             (<see cref="M:SpaceCenter.DockingPort.ReengageDistance" />).
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.DockingPortState.Shielded">
             <summary>
             The docking port has a shield, and the shield is closed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.DockingPortState.Moving">
             <summary>
             The docking ports shield is currently opening/closing.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.GameMode">
             <summary>
             The game mode.
             Returned by <see cref="T:SpaceCenter.GameMode" /></summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.Sandbox">
             <summary>
             Sandbox mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.Career">
             <summary>
             Career mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.Science">
             <summary>
             Science career mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.ScienceSandbox">
             <summary>
             Science sandbox mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.Mission">
             <summary>
             Mission mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.MissionBuilder">
             <summary>
             Mission builder mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.Scenario">
             <summary>
             Scenario mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.GameMode.ScenarioNonResumable">
             <summary>
             Scenario mode that cannot be resumed.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.LegState">
             <summary>
             The state of a landing leg. See <see cref="M:SpaceCenter.Leg.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.LegState.Deployed">
             <summary>
             Landing leg is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.LegState.Retracted">
             <summary>
             Landing leg is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.LegState.Deploying">
             <summary>
             Landing leg is being deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.LegState.Retracting">
             <summary>
             Landing leg is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.LegState.Broken">
             <summary>
             Landing leg is broken.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.MotorState">
             <summary>
             The state of the motor on a powered wheel. See <see cref="M:SpaceCenter.Wheel.MotorState" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.MotorState.Idle">
             <summary>
             The motor is idle.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.MotorState.Running">
             <summary>
             The motor is running.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.MotorState.Disabled">
             <summary>
             The motor is disabled.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.MotorState.Inoperable">
             <summary>
             The motor is inoperable.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.MotorState.NotEnoughResources">
             <summary>
             The motor does not have enough resources to run.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ParachuteState">
             <summary>
             The state of a parachute. See <see cref="M:SpaceCenter.Parachute.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ParachuteState.Stowed">
             <summary>
             The parachute is safely tucked away inside its housing.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ParachuteState.Armed">
             <summary>
             The parachute is armed for deployment. (RealChutes only)
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ParachuteState.Active">
             <summary>
             The parachute is still stowed, but ready to semi-deploy.
             (Stock parachutes only)
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ParachuteState.SemiDeployed">
             <summary>
             The parachute has been deployed and is providing some drag,
             but is not fully deployed yet. (Stock parachutes only)
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ParachuteState.Deployed">
             <summary>
             The parachute is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ParachuteState.Cut">
             <summary>
             The parachute has been cut.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.RadiatorState">
             <summary>
             The state of a radiator. <see cref="T:SpaceCenter.RadiatorState" /></summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.RadiatorState.Extended">
             <summary>
             Radiator is fully extended.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.RadiatorState.Retracted">
             <summary>
             Radiator is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.RadiatorState.Extending">
             <summary>
             Radiator is being extended.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.RadiatorState.Retracting">
             <summary>
             Radiator is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.RadiatorState.Broken">
             <summary>
             Radiator is being broken.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ResourceConverterState">
             <summary>
             The state of a resource converter. See <see cref="M:SpaceCenter.ResourceConverter.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceConverterState.Running">
             <summary>
             Converter is running.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceConverterState.Idle">
             <summary>
             Converter is idle.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceConverterState.MissingResource">
             <summary>
             Converter is missing a required resource.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceConverterState.StorageFull">
             <summary>
             No available storage for output resource.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceConverterState.Capacity">
             <summary>
             At preset resource capacity.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceConverterState.Unknown">
             <summary>
             Unknown state. Possible with modified resource converters.
             In this case, check <see cref="M:SpaceCenter.ResourceConverter.StatusInfo" /> for more information.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ResourceFlowMode">
             <summary>
             The way in which a resource flows between parts. See <see cref="M:SpaceCenter.Resources.FlowMode" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceFlowMode.Vessel">
             <summary>
             The resource flows to any part in the vessel. For example, electric charge.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceFlowMode.Stage">
             <summary>
             The resource flows from parts in the first stage, followed by the second,
             and so on. For example, mono-propellant.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceFlowMode.Adjacent">
             <summary>
             The resource flows between adjacent parts within the vessel. For example,
             liquid fuel or oxidizer.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceFlowMode.None">
             <summary>
             The resource does not flow. For example, solid fuel.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ResourceHarvesterState">
             <summary>
             The state of a resource harvester. See <see cref="M:SpaceCenter.ResourceHarvester.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceHarvesterState.Deploying">
             <summary>
             The drill is deploying.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceHarvesterState.Deployed">
             <summary>
             The drill is deployed and ready.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceHarvesterState.Retracting">
             <summary>
             The drill is retracting.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceHarvesterState.Retracted">
             <summary>
             The drill is retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.ResourceHarvesterState.Active">
             <summary>
             The drill is running.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.SASMode">
             <summary>
             The behavior of the SAS auto-pilot. See <see cref="M:SpaceCenter.AutoPilot.SASMode" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.StabilityAssist">
             <summary>
             Stability assist mode. Dampen out any rotation.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.Maneuver">
             <summary>
             Point in the burn direction of the next maneuver node.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.Prograde">
             <summary>
             Point in the prograde direction.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.Retrograde">
             <summary>
             Point in the retrograde direction.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.Normal">
             <summary>
             Point in the orbit normal direction.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.AntiNormal">
             <summary>
             Point in the orbit anti-normal direction.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.Radial">
             <summary>
             Point in the orbit radial direction.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.AntiRadial">
             <summary>
             Point in the orbit anti-radial direction.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.Target">
             <summary>
             Point in the direction of the current target.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SASMode.AntiTarget">
             <summary>
             Point away from the current target.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.SolarPanelState">
             <summary>
             The state of a solar panel. See <see cref="M:SpaceCenter.SolarPanel.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SolarPanelState.Extended">
             <summary>
             Solar panel is fully extended.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SolarPanelState.Retracted">
             <summary>
             Solar panel is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SolarPanelState.Extending">
             <summary>
             Solar panel is being extended.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SolarPanelState.Retracting">
             <summary>
             Solar panel is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SolarPanelState.Broken">
             <summary>
             Solar panel is broken.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.SpeedMode">
             <summary>
             The mode of the speed reported in the navball.
             See <see cref="M:SpaceCenter.Control.SpeedMode" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SpeedMode.Orbit">
             <summary>
             Speed is relative to the vessel's orbit.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SpeedMode.Surface">
             <summary>
             Speed is relative to the surface of the body being orbited.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.SpeedMode.Target">
             <summary>
             Speed is relative to the current target.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.VesselSituation">
             <summary>
             The situation a vessel is in.
             See <see cref="M:SpaceCenter.Vessel.Situation" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.PreLaunch">
             <summary>
             Vessel is awaiting launch.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.Orbiting">
             <summary>
             Vessel is orbiting a body.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.SubOrbital">
             <summary>
             Vessel is on a sub-orbital trajectory.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.Escaping">
             <summary>
             Escaping.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.Flying">
             <summary>
             Vessel is flying through an atmosphere.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.Landed">
             <summary>
             Vessel is landed on the surface of a body.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.Splashed">
             <summary>
             Vessel has splashed down in an ocean.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselSituation.Docked">
             <summary>
             Vessel is docked to another.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.VesselType">
             <summary>
             The type of a vessel.
             See <see cref="M:SpaceCenter.Vessel.Type" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Base">
             <summary>
             Base.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Debris">
             <summary>
             Debris.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Lander">
             <summary>
             Lander.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Plane">
             <summary>
             Plane.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Probe">
             <summary>
             Probe.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Relay">
             <summary>
             Relay.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Rover">
             <summary>
             Rover.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Ship">
             <summary>
             Ship.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.VesselType.Station">
             <summary>
             Station.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.WarpMode">
             <summary>
             The time warp mode.
             Returned by <see cref="T:SpaceCenter.WarpMode" /></summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WarpMode.Rails">
             <summary>
             Time warp is active, and in regular "on-rails" mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WarpMode.Physics">
             <summary>
             Time warp is active, and in physical time warp mode.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WarpMode.None">
             <summary>
             Time warp is not active.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.WheelState">
             <summary>
             The state of a wheel. See <see cref="M:SpaceCenter.Wheel.State" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WheelState.Deployed">
             <summary>
             Wheel is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WheelState.Retracted">
             <summary>
             Wheel is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WheelState.Deploying">
             <summary>
             Wheel is being deployed.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WheelState.Retracting">
             <summary>
             Wheel is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.SpaceCenter.WheelState.Broken">
             <summary>
             Wheel is broken.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Antenna">
             <summary>
             An antenna. Obtained by calling <see cref="M:SpaceCenter.Part.Antenna" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Antenna.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Antenna.Cancel">
             <summary>
             Cancel current transmission of data.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Antenna.Transmit">
             <summary>
             Transmit data.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.AllowPartial">
             <summary>
             Whether partial data transmission is permitted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.CanTransmit">
             <summary>
             Whether data can be transmitted by this antenna.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.Combinable">
             <summary>
             Whether the antenna can be combined with other antennae on the vessel
             to boost the power.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.CombinableExponent">
             <summary>
             Exponent used to calculate the combined power of multiple antennae on a vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.Deployable">
             <summary>
             Whether the antenna is deployable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.Deployed">
             <summary>
             Whether the antenna is deployed.
             </summary>
             <remarks>
             Fixed antennas are always deployed.
             Returns an error if you try to deploy a fixed antenna.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.PacketInterval">
             <summary>
             Interval between sending packets in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.PacketResourceCost">
             <summary>
             Units of electric charge consumed per packet sent.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.PacketSize">
             <summary>
             Amount of data sent per packet in Mits.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.Part">
             <summary>
             The part object for this antenna.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.Power">
             <summary>
             The power of the antenna.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Antenna.State">
             <summary>
             The current state of the antenna.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.AutoPilot">
             <summary>
             Provides basic auto-piloting utilities for a vessel.
             Created by calling <see cref="M:SpaceCenter.Vessel.AutoPilot" />.
             </summary>
             <remarks>
             If a client engages the auto-pilot and then closes its connection to the server,
             the auto-pilot will be disengaged and its target reference frame, direction and roll
             reset to default.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.AutoPilot.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.AutoPilot.Disengage">
             <summary>
             Disengage the auto-pilot.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.AutoPilot.Engage">
             <summary>
             Engage the auto-pilot.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.AutoPilot.TargetPitchAndHeading(System.Single,System.Single)">
             <summary>
             Set target pitch and heading angles.
             </summary>
             <param name="pitch">Target pitch angle, in degrees between -90° and +90°.</param>
             <param name="heading">Target heading angle, in degrees between 0° and 360°.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.AutoPilot.Wait">
             <summary>
             Blocks until the vessel is pointing in the target direction and has
             the target roll (if set). Throws an exception if the auto-pilot has not been engaged.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.AttenuationAngle">
             <summary>
             The angle at which the autopilot considers the vessel to be pointing
             close to the target.
             This determines the midpoint of the target velocity attenuation function.
             A vector of three angles, in degrees, one for each of the pitch, roll and yaw axes.
             Defaults to 1° for each axis.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.AutoTune">
             <summary>
             Whether the rotation rate controllers PID parameters should be automatically tuned
             using the vessels moment of inertia and available torque. Defaults to <c>true</c>.
             See <see cref="M:SpaceCenter.AutoPilot.TimeToPeak" /> and <see cref="M:SpaceCenter.AutoPilot.Overshoot" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.DecelerationTime">
             <summary>
             The time the vessel should take to come to a stop pointing in the target direction.
             This determines the angular acceleration used to decelerate the vessel.
             A vector of three times, in seconds, one for each of the pitch, roll and yaw axes.
             Defaults to 5 seconds for each axis.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.Error">
             <summary>
             The error, in degrees, between the direction the ship has been asked
             to point in and the direction it is pointing in. Throws an exception if the auto-pilot
             has not been engaged and SAS is not enabled or is in stability assist mode.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.HeadingError">
             <summary>
             The error, in degrees, between the vessels current and target heading.
             Throws an exception if the auto-pilot has not been engaged.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.Overshoot">
             <summary>
             The target overshoot percentage used to autotune the PID controllers.
             A vector of three values, between 0 and 1, for each of the pitch, roll and yaw axes.
             Defaults to 0.01 for each axis.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.PitchError">
             <summary>
             The error, in degrees, between the vessels current and target pitch.
             Throws an exception if the auto-pilot has not been engaged.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.PitchPIDGains">
             <summary>
             Gains for the pitch PID controller.
             </summary>
             <remarks>
             When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
             which will overwrite any manual changes.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.ReferenceFrame">
             <summary>
             The reference frame for the target direction (<see cref="M:SpaceCenter.AutoPilot.TargetDirection" />).
             </summary>
             <remarks>
             An error will be thrown if this property is set to a reference frame that rotates with
             the vessel being controlled, as it is impossible to rotate the vessel in such a
             reference frame.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.RollError">
             <summary>
             The error, in degrees, between the vessels current and target roll.
             Throws an exception if the auto-pilot has not been engaged or no target roll is set.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.RollPIDGains">
             <summary>
             Gains for the roll PID controller.
             </summary>
             <remarks>
             When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
             which will overwrite any manual changes.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.RollThreshold">
             <summary>
             The threshold at which the autopilot will try to match the target roll angle, if any.
             Defaults to 5 degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.SAS">
             <summary>
             The state of SAS.
             </summary>
             <remarks>Equivalent to <see cref="M:SpaceCenter.Control.SAS" /></remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.SASMode">
             <summary>
             The current <see cref="T:SpaceCenter.SASMode" />.
             These modes are equivalent to the mode buttons to the left of the navball that appear
             when SAS is enabled.
             </summary>
             <remarks>Equivalent to <see cref="M:SpaceCenter.Control.SASMode" /></remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.StoppingTime">
             <summary>
             The maximum amount of time that the vessel should need to come to a complete stop.
             This determines the maximum angular velocity of the vessel.
             A vector of three stopping times, in seconds, one for each of the pitch, roll
             and yaw axes. Defaults to 0.5 seconds for each axis.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.TargetDirection">
             <summary>
             Direction vector corresponding to the target pitch and heading.
             This is in the reference frame specified by <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.TargetHeading">
             <summary>
             The target heading, in degrees, between 0° and 360°.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.TargetPitch">
             <summary>
             The target pitch, in degrees, between -90° and +90°.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.TargetRoll">
             <summary>
             The target roll, in degrees. <c>NaN</c> if no target roll is set.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.TimeToPeak">
             <summary>
             The target time to peak used to autotune the PID controllers.
             A vector of three times, in seconds, for each of the pitch, roll and yaw axes.
             Defaults to 3 seconds for each axis.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.AutoPilot.YawPIDGains">
             <summary>
             Gains for the yaw PID controller.
             </summary>
             <remarks>
             When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
             which will overwrite any manual changes.
             </remarks>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Camera">
             <summary>
             Controls the game's camera.
             Obtained by calling <see cref="M:SpaceCenter.Camera" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Camera.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.DefaultDistance">
             <summary>
             Default distance from the camera to the subject, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.Distance">
             <summary>
             The distance from the camera to the subject, in meters.
             A value between <see cref="M:SpaceCenter.Camera.MinDistance" /> and <see cref="M:SpaceCenter.Camera.MaxDistance" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.FocussedBody">
             <summary>
             In map mode, the celestial body that the camera is focussed on.
             Returns <c>null</c> if the camera is not focussed on a celestial body.
             Returns an error is the camera is not in map mode.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.FocussedNode">
             <summary>
             In map mode, the maneuver node that the camera is focussed on.
             Returns <c>null</c> if the camera is not focussed on a maneuver node.
             Returns an error is the camera is not in map mode.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.FocussedVessel">
             <summary>
             In map mode, the vessel that the camera is focussed on.
             Returns <c>null</c> if the camera is not focussed on a vessel.
             Returns an error is the camera is not in map mode.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.Heading">
             <summary>
             The heading of the camera, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.MaxDistance">
             <summary>
             Maximum distance from the camera to the subject, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.MaxPitch">
             <summary>
             The maximum pitch of the camera.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.MinDistance">
             <summary>
             Minimum distance from the camera to the subject, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.MinPitch">
             <summary>
             The minimum pitch of the camera.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.Mode">
             <summary>
             The current mode of the camera.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Camera.Pitch">
             <summary>
             The pitch of the camera, in degrees.
             A value between <see cref="M:SpaceCenter.Camera.MinPitch" /> and <see cref="M:SpaceCenter.Camera.MaxPitch" /></summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CargoBay">
             <summary>
             A cargo bay. Obtained by calling <see cref="M:SpaceCenter.Part.CargoBay" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CargoBay.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CargoBay.Open">
             <summary>
             Whether the cargo bay is open.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CargoBay.Part">
             <summary>
             The part object for this cargo bay.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CargoBay.State">
             <summary>
             The state of the cargo bay.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CelestialBody">
             <summary>
             Represents a celestial body (such as a planet or moon).
             See <see cref="M:SpaceCenter.Bodies" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.AltitudeAtPosition(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The altitude, in meters, of the given position in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">Reference frame for the position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.AngularVelocity(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The angular velocity of the body in the specified reference frame.
             </summary>
             <returns>The angular velocity as a vector. The magnitude of the vector is the rotational
             speed of the body, in radians per second. The direction of the vector indicates the axis
             of rotation, using the right-hand rule.</returns>
             <param name="referenceFrame">The reference frame the returned
             angular velocity is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.AtmosphericDensityAtPosition(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The atmospheric density at the given position, in <math>kg/m^3</math>,
             in the given reference frame.
             </summary>
             <param name="position">The position vector at which to measure the density.</param>
             <param name="referenceFrame">Reference frame that the position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.BedrockHeight(System.Double,System.Double)">
             <summary>
             The height of the surface relative to mean sea level, in meters,
             at the given position. When over water, this is the height
             of the sea-bed and is therefore  negative value.
             </summary>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.BedrockPosition(System.Double,System.Double,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the surface at the given latitude and longitude, in the given
             reference frame. When over water, this is the position at the bottom of the sea-bed.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.BiomeAt(System.Double,System.Double)">
             <summary>
             The biome at the given latitude and longitude, in degrees.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.DensityAt(System.Double)">
             <summary>
             Gets the air density, in <math>kg/m^3</math>, for the specified
             altitude above sea level, in meters.
             </summary>
             <remarks>
             This is an approximation, because actual calculations, taking sun exposure into account
             to compute air temperature, require us to know the exact point on the body where the
             density is to be computed (knowing the altitude is not enough).
             However, the difference is small for high altitudes, so it makes very little difference
             for trajectory prediction.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.Direction(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction in which the north pole of the celestial body is pointing,
             in the specified reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.LatitudeAtPosition(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The latitude of the given position, in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">Reference frame for the position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.LongitudeAtPosition(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The longitude of the given position, in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">Reference frame for the position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.MSLPosition(System.Double,System.Double,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position at mean sea level at the given latitude and longitude,
             in the given reference frame.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.Position(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the center of the body, in the specified reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.PositionAtAltitude(System.Double,System.Double,System.Double,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position at the given latitude, longitude and altitude, in the given reference frame.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="altitude">Altitude in meters above sea level.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.PressureAt(System.Double)">
             <summary>
             Gets the air pressure, in Pascals, for the specified
             altitude above sea level, in meters.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.Rotation(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The rotation of the body, in the specified reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.SurfaceHeight(System.Double,System.Double)">
             <summary>
             The height of the surface relative to mean sea level, in meters,
             at the given position. When over water this is equal to 0.
             </summary>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.SurfacePosition(System.Double,System.Double,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the surface at the given latitude and longitude, in the given
             reference frame. When over water, this is the position of the surface of the water.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.TemperatureAt(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The temperature on the body at the given position, in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">The reference frame that the position is in.</param>
             <remarks>
             This calculation is performed using the bodies current position, which means that
             the value could be wrong if you want to know the temperature in the far future.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CelestialBody.Velocity(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The linear velocity of the body, in the specified reference frame.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the body in meters per second.</returns>
             <param name="referenceFrame">The reference frame that the returned
             velocity vector is in.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.AtmosphereDepth">
             <summary>
             The depth of the atmosphere, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.Biomes">
             <summary>
             The biomes present on this body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.EquatorialRadius">
             <summary>
             The equatorial radius of the body, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.FlyingHighAltitudeThreshold">
             <summary>
             The altitude, in meters, above which a vessel is considered to be
             flying "high" when doing science.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.GravitationalParameter">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Standard_gravitational_parameter">standard
             gravitational parameter</a> of the body in <math>m^3s^{-2}</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.HasAtmosphere">
             <summary><c>true</c> if the body has an atmosphere.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.HasAtmosphericOxygen">
             <summary><c>true</c> if there is oxygen in the atmosphere, required for air-breathing engines.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.InitialRotation">
             <summary>
             The initial rotation angle of the body (at UT 0), in radians.
             A value between 0 and <math>2\pi</math></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.Mass">
             <summary>
             The mass of the body, in kilograms.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.Name">
             <summary>
             The name of the body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.NonRotatingReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this celestial body, and
             orientated in a fixed direction (it does not rotate with the body).
             <list type="bullet"><item><description>The origin is at the center of the body.</description></item><item><description>The axes do not rotate.</description></item><item><description>The x-axis points in an arbitrary direction through the
             equator.</description></item><item><description>The y-axis points from the center of the body towards
             the north pole.</description></item><item><description>The z-axis points in an arbitrary direction through the
             equator.</description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.Orbit">
             <summary>
             The orbit of the body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.OrbitalReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this celestial body, but
             orientated with the body's orbital prograde/normal/radial directions.
             <list type="bullet"><item><description>The origin is at the center of the body.
             </description></item><item><description>The axes rotate with the orbital prograde/normal/radial
             directions.</description></item><item><description>The x-axis points in the orbital anti-radial direction.
             </description></item><item><description>The y-axis points in the orbital prograde direction.
             </description></item><item><description>The z-axis points in the orbital normal direction.
             </description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the celestial body.
             <list type="bullet"><item><description>The origin is at the center of the body.
             </description></item><item><description>The axes rotate with the body.</description></item><item><description>The x-axis points from the center of the body
             towards the intersection of the prime meridian and equator (the
             position at 0° longitude, 0° latitude).</description></item><item><description>The y-axis points from the center of the body
             towards the north pole.</description></item><item><description>The z-axis points from the center of the body
             towards the equator at 90°E longitude.</description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.RotationAngle">
             <summary>
             The current rotation angle of the body, in radians.
             A value between 0 and <math>2\pi</math></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.RotationalPeriod">
             <summary>
             The sidereal rotational period of the body, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.RotationalSpeed">
             <summary>
             The rotational speed of the body, in radians per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.Satellites">
             <summary>
             A list of celestial bodies that are in orbit around this celestial body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.SpaceHighAltitudeThreshold">
             <summary>
             The altitude, in meters, above which a vessel is considered to be
             in "high" space when doing science.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.SphereOfInfluence">
             <summary>
             The radius of the sphere of influence of the body, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CelestialBody.SurfaceGravity">
             <summary>
             The acceleration due to gravity at sea level (mean altitude) on the body,
             in <math>m/s^2</math>.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CommLink">
             <summary>
             Represents a communication node in the network. For example, a vessel or the KSC.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CommLink.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommLink.End">
             <summary>
             Start point of the link.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommLink.SignalStrength">
             <summary>
             Signal strength of the link.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommLink.Start">
             <summary>
             Start point of the link.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommLink.Type">
             <summary>
             The type of link.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CommNode">
             <summary>
             Represents a communication node in the network. For example, a vessel or the KSC.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CommNode.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommNode.IsControlPoint">
             <summary>
             Whether the communication node is a control point, for example a manned vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommNode.IsHome">
             <summary>
             Whether the communication node is on Kerbin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommNode.IsVessel">
             <summary>
             Whether the communication node is a vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommNode.Name">
             <summary>
             Name of the communication node.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CommNode.Vessel">
             <summary>
             The vessel for this communication node.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Comms">
             <summary>
             Used to interact with CommNet for a given vessel.
             Obtained by calling <see cref="M:SpaceCenter.Vessel.Comms" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Comms.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Comms.CanCommunicate">
             <summary>
             Whether the vessel can communicate with KSC.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Comms.CanTransmitScience">
             <summary>
             Whether the vessel can transmit science data to KSC.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Comms.ControlPath">
             <summary>
             The communication path used to control the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Comms.Power">
             <summary>
             The combined power of all active antennae on the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Comms.SignalDelay">
             <summary>
             Signal delay to KSC in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Comms.SignalStrength">
             <summary>
             Signal strength to KSC.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Contract">
             <summary>
             A contract. Can be accessed using <see cref="M:SpaceCenter.ContractManager" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Contract.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Contract.Accept">
             <summary>
             Accept an offered contract.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Contract.Cancel">
             <summary>
             Cancel an active contract.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Contract.Decline">
             <summary>
             Decline an offered contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Active">
             <summary>
             Whether the contract is active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.CanBeCanceled">
             <summary>
             Whether the contract can be canceled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.CanBeDeclined">
             <summary>
             Whether the contract can be declined.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.CanBeFailed">
             <summary>
             Whether the contract can be failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Description">
             <summary>
             Description of the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Failed">
             <summary>
             Whether the contract has been failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.FundsAdvance">
             <summary>
             Funds received when accepting the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.FundsCompletion">
             <summary>
             Funds received on completion of the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.FundsFailure">
             <summary>
             Funds lost if the contract is failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Keywords">
             <summary>
             Keywords for the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Notes">
             <summary>
             Notes for the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Parameters">
             <summary>
             Parameters for the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Read">
             <summary>
             Whether the contract has been read.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.ReputationCompletion">
             <summary>
             Reputation gained on completion of the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.ReputationFailure">
             <summary>
             Reputation lost if the contract is failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.ScienceCompletion">
             <summary>
             Science gained on completion of the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Seen">
             <summary>
             Whether the contract has been seen.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.State">
             <summary>
             State of the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Synopsis">
             <summary>
             Synopsis for the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Title">
             <summary>
             Title of the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Contract.Type">
             <summary>
             Type of the contract.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ContractManager">
             <summary>
             Contracts manager.
             Obtained by calling <see cref="M:SpaceCenter.ContractManager" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ContractManager.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractManager.ActiveContracts">
             <summary>
             A list of all active contracts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractManager.AllContracts">
             <summary>
             A list of all contracts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractManager.CompletedContracts">
             <summary>
             A list of all completed contracts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractManager.FailedContracts">
             <summary>
             A list of all failed contracts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractManager.OfferedContracts">
             <summary>
             A list of all offered, but unaccepted, contracts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractManager.Types">
             <summary>
             A list of all contract types.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ContractParameter">
             <summary>
             A contract parameter. See <see cref="M:SpaceCenter.Contract.Parameters" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ContractParameter.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.Children">
             <summary>
             Child contract parameters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.Completed">
             <summary>
             Whether the parameter has been completed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.Failed">
             <summary>
             Whether the parameter has been failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.FundsCompletion">
             <summary>
             Funds received on completion of the contract parameter.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.FundsFailure">
             <summary>
             Funds lost if the contract parameter is failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.Notes">
             <summary>
             Notes for the parameter.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.Optional">
             <summary>
             Whether the contract parameter is optional.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.ReputationCompletion">
             <summary>
             Reputation gained on completion of the contract parameter.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.ReputationFailure">
             <summary>
             Reputation lost if the contract parameter is failed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.ScienceCompletion">
             <summary>
             Science gained on completion of the contract parameter.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ContractParameter.Title">
             <summary>
             Title of the parameter.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Control">
             <summary>
             Used to manipulate the controls of a vessel. This includes adjusting the
             throttle, enabling/disabling systems such as SAS and RCS, or altering the
             direction in which the vessel is pointing.
             Obtained by calling <see cref="M:SpaceCenter.Vessel.Control" />.
             </summary>
             <remarks>
             Control inputs (such as pitch, yaw and roll) are zeroed when all clients
             that have set one or more of these inputs are no longer connected.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.ActivateNextStage">
             <summary>
             Activates the next stage. Equivalent to pressing the space bar in-game.
             </summary>
             <returns>A list of vessel objects that are jettisoned from the active vessel.</returns>
             <remarks>
             When called, the active vessel may change. It is therefore possible that,
             after calling this function, the object(s) returned by previous call(s) to
             <see cref="M:SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.AddNode(System.Double,System.Single,System.Single,System.Single)">
             <summary>
             Creates a maneuver node at the given universal time, and returns a
             <see cref="T:SpaceCenter.Node" /> object that can be used to modify it.
             Optionally sets the magnitude of the delta-v for the maneuver node
             in the prograde, normal and radial directions.
             </summary>
             <param name="ut">Universal time of the maneuver node.</param>
             <param name="prograde">Delta-v in the prograde direction.</param>
             <param name="normal">Delta-v in the normal direction.</param>
             <param name="radial">Delta-v in the radial direction.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.GetActionGroup(System.UInt32)">
             <summary>
             Returns <c>true</c> if the given action group is enabled.
             </summary>
             <param name="group">
             A number between 0 and 9 inclusive,
             or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
             </param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.RemoveNodes">
             <summary>
             Remove all maneuver nodes.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.SetActionGroup(System.UInt32,System.Boolean)">
             <summary>
             Sets the state of the given action group.
             </summary>
             <param name="group">
             A number between 0 and 9 inclusive,
             or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
             </param>
             <param name="state"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Control.ToggleActionGroup(System.UInt32)">
             <summary>
             Toggles the state of the given action group.
             </summary>
             <param name="group">
             A number between 0 and 9 inclusive,
             or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
             </param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Abort">
             <summary>
             The state of the abort action group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Antennas">
             <summary>
             Returns whether all antennas on the vessel are deployed,
             and sets the deployment state of all antennas.
             See <see cref="M:SpaceCenter.Antenna.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Brakes">
             <summary>
             The state of the wheel brakes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.CargoBays">
             <summary>
             Returns whether any of the cargo bays on the vessel are open,
             and sets the open state of all cargo bays.
             See <see cref="M:SpaceCenter.CargoBay.Open" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.CurrentStage">
             <summary>
             The current stage of the vessel. Corresponds to the stage number in
             the in-game UI.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Forward">
             <summary>
             The state of the forward translational control.
             A value between -1 and 1.
             Equivalent to the h and n keys.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Gear">
             <summary>
             The state of the landing gear/legs.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.InputMode">
             <summary>
             Sets the behavior of the pitch, yaw, roll and translation control inputs.
             When set to additive, these inputs are added to the vessels current inputs.
             This mode is the default.
             When set to override, these inputs (if non-zero) override the vessels inputs.
             This mode prevents keyboard control, or SAS, from interfering with the controls when
             they are set.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Intakes">
             <summary>
             Returns whether all of the air intakes on the vessel are open,
             and sets the open state of all air intakes.
             See <see cref="M:SpaceCenter.Intake.Open" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Legs">
             <summary>
             Returns whether all landing legs on the vessel are deployed,
             and sets the deployment state of all landing legs.
             Does not include wheels (for example landing gear).
             See <see cref="M:SpaceCenter.Leg.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Lights">
             <summary>
             The state of the lights.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Nodes">
             <summary>
             Returns a list of all existing maneuver nodes, ordered by time from first to last.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Parachutes">
             <summary>
             Returns whether all parachutes on the vessel are deployed,
             and sets the deployment state of all parachutes.
             Cannot be set to <c>false</c>.
             See <see cref="M:SpaceCenter.Parachute.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Pitch">
             <summary>
             The state of the pitch control.
             A value between -1 and 1.
             Equivalent to the w and s keys.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.RCS">
             <summary>
             The state of RCS.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Radiators">
             <summary>
             Returns whether all radiators on the vessel are deployed,
             and sets the deployment state of all radiators.
             See <see cref="M:SpaceCenter.Radiator.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.ReactionWheels">
             <summary>
             Returns whether all reactive wheels on the vessel are active,
             and sets the active state of all reaction wheels.
             See <see cref="M:SpaceCenter.ReactionWheel.Active" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.ResourceHarvesters">
             <summary>
             Returns whether all of the resource harvesters on the vessel are deployed,
             and sets the deployment state of all resource harvesters.
             See <see cref="M:SpaceCenter.ResourceHarvester.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.ResourceHarvestersActive">
             <summary>
             Returns whether any of the resource harvesters on the vessel are active,
             and sets the active state of all resource harvesters.
             See <see cref="M:SpaceCenter.ResourceHarvester.Active" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Right">
             <summary>
             The state of the right translational control.
             A value between -1 and 1.
             Equivalent to the j and l keys.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Roll">
             <summary>
             The state of the roll control.
             A value between -1 and 1.
             Equivalent to the q and e keys.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.SAS">
             <summary>
             The state of SAS.
             </summary>
             <remarks>Equivalent to <see cref="M:SpaceCenter.AutoPilot.SAS" /></remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.SASMode">
             <summary>
             The current <see cref="T:SpaceCenter.SASMode" />.
             These modes are equivalent to the mode buttons to
             the left of the navball that appear when SAS is enabled.
             </summary>
             <remarks>Equivalent to <see cref="M:SpaceCenter.AutoPilot.SASMode" /></remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.SolarPanels">
             <summary>
             Returns whether all solar panels on the vessel are deployed,
             and sets the deployment state of all solar panels.
             See <see cref="M:SpaceCenter.SolarPanel.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Source">
             <summary>
             The source of the vessels control, for example by a kerbal or a probe core.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.SpeedMode">
             <summary>
             The current <see cref="T:SpaceCenter.SpeedMode" /> of the navball.
             This is the mode displayed next to the speed at the top of the navball.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.State">
             <summary>
             The control state of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Throttle">
             <summary>
             The state of the throttle. A value between 0 and 1.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Up">
             <summary>
             The state of the up translational control.
             A value between -1 and 1.
             Equivalent to the i and k keys.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.WheelSteering">
             <summary>
             The state of the wheel steering.
             A value between -1 and 1.
             A value of 1 steers to the left, and a value of -1 steers to the right.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.WheelThrottle">
             <summary>
             The state of the wheel throttle.
             A value between -1 and 1.
             A value of 1 rotates the wheels forwards, a value of -1 rotates
             the wheels backwards.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Wheels">
             <summary>
             Returns whether all wheels on the vessel are deployed,
             and sets the deployment state of all wheels.
             Does not include landing legs.
             See <see cref="M:SpaceCenter.Wheel.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Control.Yaw">
             <summary>
             The state of the yaw control.
             A value between -1 and 1.
             Equivalent to the a and d keys.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ControlSurface">
             <summary>
             An aerodynamic control surface. Obtained by calling <see cref="M:SpaceCenter.Part.ControlSurface" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ControlSurface.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.AuthorityLimiter">
             <summary>
             The authority limiter for the control surface, which controls how far the
             control surface will move.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this control surface,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.Deployed">
             <summary>
             Whether the control surface has been fully deployed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.Inverted">
             <summary>
             Whether the control surface movement is inverted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.Part">
             <summary>
             The part object for this control surface.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.PitchEnabled">
             <summary>
             Whether the control surface has pitch control enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.RollEnabled">
             <summary>
             Whether the control surface has roll control enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.SurfaceArea">
             <summary>
             Surface area of the control surface in <math>m^2</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ControlSurface.YawEnabled">
             <summary>
             Whether the control surface has yaw control enabled.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.CrewMember">
             <summary>
             Represents crew in a vessel. Can be obtained using <see cref="M:SpaceCenter.Vessel.Crew" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.CrewMember.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Badass">
             <summary>
             Whether the crew member is a badass.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Courage">
             <summary>
             The crew members courage.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Experience">
             <summary>
             The crew members experience.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Name">
             <summary>
             The crew members name.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.OnMission">
             <summary>
             Whether the crew member is on a mission.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Stupidity">
             <summary>
             The crew members stupidity.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Type">
             <summary>
             The type of crew member.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.CrewMember.Veteran">
             <summary>
             Whether the crew member is a veteran.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Decoupler">
             <summary>
             A decoupler. Obtained by calling <see cref="M:SpaceCenter.Part.Decoupler" /></summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Decoupler.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Decoupler.Decouple">
             <summary>
             Fires the decoupler. Returns the new vessel created when the decoupler fires.
             Throws an exception if the decoupler has already fired.
             </summary>
             <remarks>
             When called, the active vessel may change. It is therefore possible that,
             after calling this function, the object(s) returned by previous call(s) to
             <see cref="M:SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Decoupler.Decoupled">
             <summary>
             Whether the decoupler has fired.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Decoupler.Impulse">
             <summary>
             The impulse that the decoupler imparts when it is fired, in Newton seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Decoupler.Part">
             <summary>
             The part object for this decoupler.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Decoupler.Staged">
             <summary>
             Whether the decoupler is enabled in the staging sequence.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.DockingPort">
             <summary>
             A docking port. Obtained by calling <see cref="M:SpaceCenter.Part.DockingPort" /></summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.DockingPort.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.DockingPort.Direction(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction that docking port points in, in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.DockingPort.Position(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the docking port, in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.DockingPort.Rotation(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The rotation of the docking port, in the given reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.DockingPort.Undock">
             <summary>
             Undocks the docking port and returns the new <see cref="T:SpaceCenter.Vessel" /> that is created.
             This method can be called for either docking port in a docked pair.
             Throws an exception if the docking port is not docked to anything.
             </summary>
             <remarks>
             When called, the active vessel may change. It is therefore possible that,
             after calling this function, the object(s) returned by previous call(s) to
             <see cref="M:SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.DockedPart">
             <summary>
             The part that this docking port is docked to. Returns <c>null</c> if this
             docking port is not docked to anything.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.HasShield">
             <summary>
             Whether the docking port has a shield.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.Part">
             <summary>
             The part object for this docking port.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.ReengageDistance">
             <summary>
             The distance a docking port must move away when it undocks before it
             becomes ready to dock with another port, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this docking port, and
             oriented with the port.
             <list type="bullet"><item><description>The origin is at the position of the docking port.
             </description></item><item><description>The axes rotate with the docking port.</description></item><item><description>The x-axis points out to the right side of the docking port.
             </description></item><item><description>The y-axis points in the direction the docking port is facing.
             </description></item><item><description>The z-axis points out of the bottom off the docking port.
             </description></item></list></summary>
             <remarks>
             This reference frame is not necessarily equivalent to the reference frame
             for the part, returned by <see cref="M:SpaceCenter.Part.ReferenceFrame" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.Shielded">
             <summary>
             The state of the docking ports shield, if it has one.
            
             Returns <c>true</c> if the docking port has a shield, and the shield is
             closed. Otherwise returns <c>false</c>. When set to <c>true</c>, the shield is
             closed, and when set to <c>false</c> the shield is opened. If the docking
             port does not have a shield, setting this attribute has no effect.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.DockingPort.State">
             <summary>
             The current state of the docking port.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Engine">
             <summary>
             An engine, including ones of various types.
             For example liquid fuelled gimballed engines, solid rocket boosters and jet engines.
             Obtained by calling <see cref="M:SpaceCenter.Part.Engine" />.
             </summary>
             <remarks>
             For RCS thrusters <see cref="M:SpaceCenter.Part.RCS" />.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Engine.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Engine.ToggleMode">
             <summary>
             Toggle the current engine mode.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Active">
             <summary>
             Whether the engine is active. Setting this attribute may have no effect,
             depending on <see cref="M:SpaceCenter.Engine.CanShutdown" /> and <see cref="M:SpaceCenter.Engine.CanRestart" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.AutoModeSwitch">
             <summary>
             Whether the engine will automatically switch modes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.AvailableThrust">
             <summary>
             The amount of thrust, in Newtons, that would be produced by the engine
             when activated and with its throttle set to 100%.
             Returns zero if the engine does not have any fuel.
             Takes the engine's current <see cref="M:SpaceCenter.Engine.ThrustLimit" /> and atmospheric conditions
             into account.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this engine,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
             Returns zero if the engine is inactive, or not gimballed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.CanRestart">
             <summary>
             Whether the engine can be restarted once shutdown. If the engine cannot be shutdown,
             returns <c>false</c>. For example, this is <c>true</c> for liquid fueled rockets
             and <c>false</c> for solid rocket boosters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.CanShutdown">
             <summary>
             Whether the engine can be shutdown once activated. For example, this is
             <c>true</c> for liquid fueled rockets and <c>false</c> for solid rocket boosters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.GimbalLimit">
             <summary>
             The gimbal limiter of the engine. A value between 0 and 1.
             Returns 0 if the gimbal is locked.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.GimbalLocked">
             <summary>
             Whether the engines gimbal is locked in place. Setting this attribute has
             no effect if the engine is not gimballed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.GimbalRange">
             <summary>
             The range over which the gimbal can move, in degrees.
             Returns 0 if the engine is not gimballed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Gimballed">
             <summary>
             Whether the engine is gimballed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.HasFuel">
             <summary>
             Whether the engine has any fuel available.
             </summary>
             <remarks>
             The engine must be activated for this property to update correctly.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.HasModes">
             <summary>
             Whether the engine has multiple modes of operation.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.KerbinSeaLevelSpecificImpulse">
             <summary>
             The specific impulse of the engine at sea level on Kerbin, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.MaxThrust">
             <summary>
             The amount of thrust, in Newtons, that would be produced by the engine
             when activated and fueled, with its throttle and throttle limiter set to 100%.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.MaxVacuumThrust">
             <summary>
             The maximum amount of thrust that can be produced by the engine in a
             vacuum, in Newtons. This is the amount of thrust produced by the engine
             when activated, <see cref="M:SpaceCenter.Engine.ThrustLimit" /> is set to 100%, the main
             vessel's throttle is set to 100% and the engine is in a vacuum.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Mode">
             <summary>
             The name of the current engine mode.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Modes">
             <summary>
             The available modes for the engine.
             A dictionary mapping mode names to <see cref="T:SpaceCenter.Engine" /> objects.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Part">
             <summary>
             The part object for this engine.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.PropellantNames">
             <summary>
             The names of the propellants that the engine consumes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.PropellantRatios">
             <summary>
             The ratio of resources that the engine consumes. A dictionary mapping resource names
             to the ratio at which they are consumed by the engine.
             </summary>
             <remarks>
             For example, if the ratios are 0.6 for LiquidFuel and 0.4 for Oxidizer, then for every
             0.6 units of LiquidFuel that the engine burns, it will burn 0.4 units of Oxidizer.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Propellants">
             <summary>
             The propellants that the engine consumes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.SpecificImpulse">
             <summary>
             The current specific impulse of the engine, in seconds. Returns zero
             if the engine is not active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Throttle">
             <summary>
             The current throttle setting for the engine. A value between 0 and 1.
             This is not necessarily the same as the vessel's main throttle
             setting, as some engines take time to adjust their throttle
             (such as jet engines).
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.ThrottleLocked">
             <summary>
             Whether the <see cref="M:SpaceCenter.Control.Throttle" /> affects the engine. For example,
             this is <c>true</c> for liquid fueled rockets, and <c>false</c> for solid rocket
             boosters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Thrust">
             <summary>
             The current amount of thrust being produced by the engine, in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.ThrustLimit">
             <summary>
             The thrust limiter of the engine. A value between 0 and 1. Setting this
             attribute may have no effect, for example the thrust limit for a solid
             rocket booster cannot be changed in flight.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.Thrusters">
             <summary>
             The components of the engine that generate thrust.
             </summary>
             <remarks>
             For example, this corresponds to the rocket nozzel on a solid rocket booster,
             or the individual nozzels on a RAPIER engine.
             The overall thrust produced by the engine, as reported by <see cref="M:SpaceCenter.Engine.AvailableThrust" />,
             <see cref="M:SpaceCenter.Engine.MaxThrust" /> and others, is the sum of the thrust generated by each thruster.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Engine.VacuumSpecificImpulse">
             <summary>
             The vacuum specific impulse of the engine, in seconds.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Experiment">
             <summary>
             Obtained by calling <see cref="M:SpaceCenter.Part.Experiment" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Experiment.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Experiment.Dump">
             <summary>
             Dump the experimental data contained by the experiment.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Experiment.Reset">
             <summary>
             Reset the experiment.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Experiment.Run">
             <summary>
             Run the experiment.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Experiment.Transmit">
             <summary>
             Transmit all experimental data contained by this part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Available">
             <summary>
             Determines if the experiment is available given the current conditions.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Biome">
             <summary>
             The name of the biome the experiment is currently in.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Data">
             <summary>
             The data contained in this experiment.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Deployed">
             <summary>
             Whether the experiment has been deployed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.HasData">
             <summary>
             Whether the experiment contains data.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Inoperable">
             <summary>
             Whether the experiment is inoperable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Part">
             <summary>
             The part object for this experiment.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.Rerunnable">
             <summary>
             Whether the experiment can be re-run.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Experiment.ScienceSubject">
             <summary>
             Containing information on the corresponding specific science result for the current
             conditions. Returns <c>null</c> if the experiment is unavailable.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Fairing">
             <summary>
             A fairing. Obtained by calling <see cref="M:SpaceCenter.Part.Fairing" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Fairing.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Fairing.Jettison">
             <summary>
             Jettison the fairing. Has no effect if it has already been jettisoned.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Fairing.Jettisoned">
             <summary>
             Whether the fairing has been jettisoned.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Fairing.Part">
             <summary>
             The part object for this fairing.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Flight">
             <summary>
             Used to get flight telemetry for a vessel, by calling <see cref="M:SpaceCenter.Vessel.Flight" />.
             All of the information returned by this class is given in the reference frame
             passed to that method.
             Obtained by calling <see cref="M:SpaceCenter.Vessel.Flight" />.
             </summary>
             <remarks>
             To get orbital information, such as the apoapsis or inclination, see <see cref="T:SpaceCenter.Orbit" />.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Flight.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Flight.SimulateAerodynamicForceAt(KRPC.Client.Services.SpaceCenter.CelestialBody,KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double})">
             <summary>
             Simulate and return the total aerodynamic forces acting on the vessel,
             if it where to be traveling with the given velocity at the given position in the
             atmosphere of the given celestial body.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.AerodynamicForce">
             <summary>
             The total aerodynamic forces acting on the vessel,
             in reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.AngleOfAttack">
             <summary>
             The pitch angle between the orientation of the vessel and its velocity vector,
             in degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.AntiNormal">
             <summary>
             The direction opposite to the normal of the vessels orbit,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.AntiRadial">
             <summary>
             The direction opposite to the radial direction of the vessels orbit,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.AtmosphereDensity">
             <summary>
             The current density of the atmosphere around the vessel, in <math>kg/m^3</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.BallisticCoefficient">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Ballistic_coefficient">ballistic coefficient</a>.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.BedrockAltitude">
             <summary>
             The altitude above the surface of the body, in meters. When over water, this is the altitude above the sea floor.
             Measured from the center of mass of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.CenterOfMass">
             <summary>
             The position of the center of mass of the vessel,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" /></summary>
             <returns>The position as a vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Direction">
             <summary>
             The direction that the vessel is pointing in,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Drag">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Aerodynamic_force">aerodynamic drag</a> currently acting on the vessel.
             </summary>
             <returns>A vector pointing in the direction of the force, with its magnitude
             equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.DragCoefficient">
             <summary>
             The coefficient of drag. This is the amount of drag produced by the vessel.
             It depends on air speed, air density and wing area.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.DynamicPressure">
             <summary>
             The dynamic pressure acting on the vessel, in Pascals. This is a measure of the
             strength of the aerodynamic forces. It is equal to
             <math>\frac{1}{2} . \mbox{air density} . \mbox{velocity}^2</math>.
             It is commonly denoted <math>Q</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Elevation">
             <summary>
             The elevation of the terrain under the vessel, in meters. This is the height of the terrain above sea level,
             and is negative when the vessel is over the sea.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.EquivalentAirSpeed">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Equivalent_airspeed">equivalent air speed</a>
             of the vessel, in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.GForce">
             <summary>
             The current G force acting on the vessel in <math>g</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Heading">
             <summary>
             The heading of the vessel (its angle relative to north), in degrees.
             A value between 0° and 360°.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.HorizontalSpeed">
             <summary>
             The horizontal speed of the vessel in meters per second,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Latitude">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Latitude">latitude</a> of the vessel for the body being orbited, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Lift">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Aerodynamic_force">aerodynamic lift</a>
             currently acting on the vessel.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.LiftCoefficient">
             <summary>
             The coefficient of lift. This is the amount of lift produced by the vessel, and
             depends on air speed, air density and wing area.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Longitude">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Longitude">longitude</a> of the vessel for the body being orbited, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Mach">
             <summary>
             The speed of the vessel, in multiples of the speed of sound.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.MeanAltitude">
             <summary>
             The altitude above sea level, in meters.
             Measured from the center of mass of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Normal">
             <summary>
             The direction normal to the vessels orbit,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Pitch">
             <summary>
             The pitch of the vessel relative to the horizon, in degrees.
             A value between -90° and +90°.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Prograde">
             <summary>
             The prograde direction of the vessels orbit,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Radial">
             <summary>
             The radial direction of the vessels orbit,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Retrograde">
             <summary>
             The retrograde direction of the vessels orbit,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.ReynoldsNumber">
             <summary>
             The vessels Reynolds number.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Roll">
             <summary>
             The roll of the vessel relative to the horizon, in degrees.
             A value between -180° and +180°.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Rotation">
             <summary>
             The rotation of the vessel, in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" /></summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.SideslipAngle">
             <summary>
             The yaw angle between the orientation of the vessel and its velocity vector, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Speed">
             <summary>
             The speed of the vessel in meters per second,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.SpeedOfSound">
             <summary>
             The speed of sound, in the atmosphere around the vessel, in <math>m/s</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.StallFraction">
             <summary>
             The current amount of stall, between 0 and 1. A value greater than 0.005 indicates
             a minor stall and a value greater than 0.5 indicates a large-scale stall.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.StaticAirTemperature">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Total_air_temperature">static (ambient)
             temperature</a> of the atmosphere around the vessel, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.StaticPressure">
             <summary>
             The static atmospheric pressure acting on the vessel, in Pascals.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.StaticPressureAtMSL">
             <summary>
             The static atmospheric pressure at mean sea level, in Pascals.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.SurfaceAltitude">
             <summary>
             The altitude above the surface of the body or sea level, whichever is closer, in meters.
             Measured from the center of mass of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.TerminalVelocity">
             <summary>
             An estimate of the current terminal velocity of the vessel, in meters per second.
             This is the speed at which the drag forces cancel out the force of gravity.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.ThrustSpecificFuelConsumption">
             <summary>
             The thrust specific fuel consumption for the jet engines on the vessel. This is a
             measure of the efficiency of the engines, with a lower value indicating a more
             efficient vessel. This value is the number of Newtons of fuel that are burned,
             per hour, to produce one newton of thrust.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.TotalAirTemperature">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Total_air_temperature">total air temperature</a>
             of the atmosphere around the vessel, in Kelvin.
             This includes the <see cref="M:SpaceCenter.Flight.StaticAirTemperature" /> and the vessel's kinetic energy.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.TrueAirSpeed">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/True_airspeed">true air speed</a>
             of the vessel, in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.Velocity">
             <summary>
             The velocity of the vessel, in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the vessel in meters per second.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Flight.VerticalSpeed">
             <summary>
             The vertical speed of the vessel in meters per second,
             in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Force">
             <summary>
             Obtained by calling <see cref="M:SpaceCenter.Part.AddForce" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Force.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Force.Remove">
             <summary>
             Remove the force.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Force.ForceVector">
             <summary>
             The force vector, in Newtons.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Force.Part">
             <summary>
             The part that this force is applied to.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Force.Position">
             <summary>
             The position at which the force acts, in reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
             </summary>
             <returns>The position as a vector.</returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Force.ReferenceFrame">
             <summary>
             The reference frame of the force vector and position.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Intake">
             <summary>
             An air intake. Obtained by calling <see cref="M:SpaceCenter.Part.Intake" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Intake.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Intake.Area">
             <summary>
             The area of the intake's opening, in square meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Intake.Flow">
             <summary>
             The rate of flow into the intake, in units of resource per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Intake.Open">
             <summary>
             Whether the intake is open.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Intake.Part">
             <summary>
             The part object for this intake.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Intake.Speed">
             <summary>
             Speed of the flow into the intake, in <math>m/s</math>.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.LaunchClamp">
             <summary>
             A launch clamp. Obtained by calling <see cref="M:SpaceCenter.Part.LaunchClamp" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.LaunchClamp.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.LaunchClamp.Release">
             <summary>
             Releases the docking clamp. Has no effect if the clamp has already been released.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.LaunchClamp.Part">
             <summary>
             The part object for this launch clamp.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Leg">
             <summary>
             A landing leg. Obtained by calling <see cref="M:SpaceCenter.Part.Leg" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Leg.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Leg.Deployable">
             <summary>
             Whether the leg is deployable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Leg.Deployed">
             <summary>
             Whether the landing leg is deployed.
             </summary>
             <remarks>
             Fixed landing legs are always deployed.
             Returns an error if you try to deploy fixed landing gear.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Leg.IsGrounded">
             <summary>
             Returns whether the leg is touching the ground.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Leg.Part">
             <summary>
             The part object for this landing leg.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Leg.State">
             <summary>
             The current state of the landing leg.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Light">
             <summary>
             A light. Obtained by calling <see cref="M:SpaceCenter.Part.Light" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Light.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Light.Active">
             <summary>
             Whether the light is switched on.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Light.Color">
             <summary>
             The color of the light, as an RGB triple.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Light.Part">
             <summary>
             The part object for this light.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Light.PowerUsage">
             <summary>
             The current power usage, in units of charge per second.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Module">
             <summary>
             This can be used to interact with a specific part module. This includes part modules in
             stock KSP, and those added by mods.
            
             In KSP, each part has zero or more
             <a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation#MODULES">PartModules</a>
             associated with it. Each one contains some of the functionality of the part.
             For example, an engine has a "ModuleEngines" part module that contains all the
             functionality of an engine.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.GetField(System.String)">
             <summary>
             Returns the value of a field.
             </summary>
             <param name="name">Name of the field.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.HasAction(System.String)">
             <summary><c>true</c> if the part has an action with the given name.
             </summary>
             <param name="name"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.HasEvent(System.String)">
             <summary><c>true</c> if the module has an event with the given name.
             </summary>
             <param name="name"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.HasField(System.String)">
             <summary>
             Returns <c>true</c> if the module has a field with the given name.
             </summary>
             <param name="name">Name of the field.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.ResetField(System.String)">
             <summary>
             Set the value of a field to its original value.
             </summary>
             <param name="name">Name of the field.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.SetAction(System.String,System.Boolean)">
             <summary>
             Set the value of an action with the given name.
             </summary>
             <param name="name"></param>
             <param name="value"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.SetFieldFloat(System.String,System.Single)">
             <summary>
             Set the value of a field to the given floating point number.
             </summary>
             <param name="name">Name of the field.</param>
             <param name="value">Value to set.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.SetFieldInt(System.String,System.Int32)">
             <summary>
             Set the value of a field to the given integer number.
             </summary>
             <param name="name">Name of the field.</param>
             <param name="value">Value to set.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.SetFieldString(System.String,System.String)">
             <summary>
             Set the value of a field to the given string.
             </summary>
             <param name="name">Name of the field.</param>
             <param name="value">Value to set.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Module.TriggerEvent(System.String)">
             <summary>
             Trigger the named event. Equivalent to clicking the button in the right-click menu
             of the part.
             </summary>
             <param name="name"></param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Module.Actions">
             <summary>
             A list of all the names of the modules actions. These are the parts actions that can
             be assigned to action groups in the in-game editor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Module.Events">
             <summary>
             A list of the names of all of the modules events. Events are the clickable buttons
             visible in the right-click menu of the part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Module.Fields">
             <summary>
             The modules field names and their associated values, as a dictionary.
             These are the values visible in the right-click menu of the part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Module.Name">
             <summary>
             Name of the PartModule. For example, "ModuleEngines".
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Module.Part">
             <summary>
             The part that contains this module.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Node">
             <summary>
             Represents a maneuver node. Can be created using <see cref="M:SpaceCenter.Control.AddNode" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Node.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Node.BurnVector(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Returns the burn vector for the maneuver node.
             </summary>
             <param name="referenceFrame">The reference frame that the returned vector is in.
             Defaults to <see cref="M:SpaceCenter.Vessel.OrbitalReferenceFrame" />.</param>
             <returns>A vector whose direction is the direction of the maneuver node burn, and
             magnitude is the delta-v of the burn in meters per second.
             </returns>
             <remarks>
             Does not change when executing the maneuver node. See <see cref="M:SpaceCenter.Node.RemainingBurnVector" />.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Node.Direction(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction of the maneuver nodes burn.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Node.Position(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position vector of the maneuver node in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Node.RemainingBurnVector(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Returns the remaining burn vector for the maneuver node.
             </summary>
             <param name="referenceFrame">The reference frame that the returned vector is in.
             Defaults to <see cref="M:SpaceCenter.Vessel.OrbitalReferenceFrame" />.</param>
             <returns>A vector whose direction is the direction of the maneuver node burn, and
             magnitude is the delta-v of the burn in meters per second.
             </returns>
             <remarks>
             Changes as the maneuver node is executed. See <see cref="M:SpaceCenter.Node.BurnVector" />.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Node.Remove">
             <summary>
             Removes the maneuver node.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.DeltaV">
             <summary>
             The delta-v of the maneuver node, in meters per second.
             </summary>
             <remarks>
             Does not change when executing the maneuver node. See <see cref="M:SpaceCenter.Node.RemainingDeltaV" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.Normal">
             <summary>
             The magnitude of the maneuver nodes delta-v in the normal direction,
             in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.Orbit">
             <summary>
             The orbit that results from executing the maneuver node.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.OrbitalReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the maneuver node, and
             orientated with the orbital prograde/normal/radial directions of the
             original orbit at the maneuver node's position.
             <list type="bullet"><item><description>The origin is at the position of the maneuver node.</description></item><item><description>The x-axis points in the orbital anti-radial direction of the original
             orbit, at the position of the maneuver node.</description></item><item><description>The y-axis points in the orbital prograde direction of the original
             orbit, at the position of the maneuver node.</description></item><item><description>The z-axis points in the orbital normal direction of the original orbit,
             at the position of the maneuver node.</description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.Prograde">
             <summary>
             The magnitude of the maneuver nodes delta-v in the prograde direction,
             in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.Radial">
             <summary>
             The magnitude of the maneuver nodes delta-v in the radial direction,
             in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the maneuver node's burn.
             <list type="bullet"><item><description>The origin is at the position of the maneuver node.</description></item><item><description>The y-axis points in the direction of the burn.</description></item><item><description>The x-axis and z-axis point in arbitrary but fixed directions.</description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.RemainingDeltaV">
             <summary>
             Gets the remaining delta-v of the maneuver node, in meters per second. Changes as the
             node is executed. This is equivalent to the delta-v reported in-game.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.TimeTo">
             <summary>
             The time until the maneuver node will be encountered, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Node.UT">
             <summary>
             The universal time at which the maneuver will occur, in seconds.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Orbit">
             <summary>
             Describes an orbit. For example, the orbit of a vessel, obtained by calling
             <see cref="M:SpaceCenter.Vessel.Orbit" />, or a celestial body, obtained by calling
             <see cref="M:SpaceCenter.CelestialBody.Orbit" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.DistanceAtClosestApproach(KRPC.Client.Services.SpaceCenter.Orbit)">
             <summary>
             Estimates and returns the distance at closest approach to a target orbit, in meters.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.EccentricAnomalyAtUT(System.Double)">
             <summary>
             The eccentric anomaly at the given universal time.
             </summary>
             <param name="ut">The universal time, in seconds.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.ListClosestApproaches(KRPC.Client.Services.SpaceCenter.Orbit,System.Int32)">
             <summary>
             Returns the times at closest approach and corresponding distances, to a target orbit.
             </summary>
             <returns>
             A list of two lists.
             The first is a list of times at closest approach, as universal times in seconds.
             The second is a list of corresponding distances at closest approach, in meters.
             </returns>
             <param name="target">Target orbit.</param>
             <param name="orbits">The number of future orbits to search.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.MeanAnomalyAtUT(System.Double)">
             <summary>
             The mean anomaly at the given time.
             </summary>
             <param name="ut">The universal time in seconds.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.OrbitalSpeedAt(System.Double)">
             <summary>
             The orbital speed at the given time, in meters per second.
             </summary>
             <param name="time">Time from now, in seconds.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.PositionAt(System.Double,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position at a given time, in the specified reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="ut">The universal time to measure the position at.</param>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.RadiusAt(System.Double)">
             <summary>
             The orbital radius at the given time, in meters.
             </summary>
             <param name="ut">The universal time to measure the radius at.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.RadiusAtTrueAnomaly(System.Double)">
             <summary>
             The orbital radius at the point in the orbit given by the true anomaly.
             </summary>
             <param name="trueAnomaly">The true anomaly.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.RelativeInclination(KRPC.Client.Services.SpaceCenter.Orbit)">
             <summary>
             Relative inclination of this orbit and the target orbit, in radians.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.TimeOfClosestApproach(KRPC.Client.Services.SpaceCenter.Orbit)">
             <summary>
             Estimates and returns the time at closest approach to a target orbit.
             </summary>
             <returns>The universal time at closest approach, in seconds.</returns>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.TrueAnomalyAtAN(KRPC.Client.Services.SpaceCenter.Orbit)">
             <summary>
             The true anomaly of the ascending node with the given target orbit.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.TrueAnomalyAtDN(KRPC.Client.Services.SpaceCenter.Orbit)">
             <summary>
             The true anomaly of the descending node with the given target orbit.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.TrueAnomalyAtRadius(System.Double)">
             <summary>
             The true anomaly at the given orbital radius.
             </summary>
             <param name="radius">The orbital radius in meters.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.TrueAnomalyAtUT(System.Double)">
             <summary>
             The true anomaly at the given time.
             </summary>
             <param name="ut">The universal time in seconds.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.UTAtTrueAnomaly(System.Double)">
             <summary>
             The universal time, in seconds, corresponding to the given true anomaly.
             </summary>
             <param name="trueAnomaly">True anomaly.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.ReferencePlaneDirection(KRPC.Client.IConnection,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction from which the orbits longitude of ascending node is measured,
             in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Orbit.ReferencePlaneNormal(KRPC.Client.IConnection,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction that is normal to the orbits reference plane,
             in the given reference frame.
             The reference plane is the plane from which the orbits inclination is measured.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Apoapsis">
             <summary>
             Gets the apoapsis of the orbit, in meters, from the center of mass
             of the body being orbited.
             </summary>
             <remarks>
             For the apoapsis altitude reported on the in-game map view,
             use <see cref="M:SpaceCenter.Orbit.ApoapsisAltitude" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.ApoapsisAltitude">
             <summary>
             The apoapsis of the orbit, in meters, above the sea level of the body being orbited.
             </summary>
             <remarks>
             This is equal to <see cref="M:SpaceCenter.Orbit.Apoapsis" /> minus the equatorial radius of the body.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.ArgumentOfPeriapsis">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Argument_of_periapsis">argument of
             periapsis</a>, in radians.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Body">
             <summary>
             The celestial body (e.g. planet or moon) around which the object is orbiting.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.EccentricAnomaly">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Eccentric_anomaly">eccentric anomaly</a>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Eccentricity">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Orbital_eccentricity">eccentricity</a>
             of the orbit.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Epoch">
             <summary>
             The time since the epoch (the point at which the
             <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly at epoch</a>
             was measured, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Inclination">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Orbital_inclination">inclination</a>
             of the orbit,
             in radians.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.LongitudeOfAscendingNode">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Longitude_of_the_ascending_node">longitude of
             the ascending node</a>, in radians.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.MeanAnomaly">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly</a>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.MeanAnomalyAtEpoch">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly at epoch</a>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.NextOrbit">
             <summary>
             If the object is going to change sphere of influence in the future, returns the new
             orbit after the change. Otherwise returns <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.OrbitalSpeed">
             <summary>
             The current orbital speed in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Periapsis">
             <summary>
             The periapsis of the orbit, in meters, from the center of mass
             of the body being orbited.
             </summary>
             <remarks>
             For the periapsis altitude reported on the in-game map view,
             use <see cref="M:SpaceCenter.Orbit.PeriapsisAltitude" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.PeriapsisAltitude">
             <summary>
             The periapsis of the orbit, in meters, above the sea level of the body being orbited.
             </summary>
             <remarks>
             This is equal to <see cref="M:SpaceCenter.Orbit.Periapsis" /> minus the equatorial radius of the body.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Period">
             <summary>
             The orbital period, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Radius">
             <summary>
             The current radius of the orbit, in meters. This is the distance between the center
             of mass of the object in orbit, and the center of mass of the body around which it
             is orbiting.
             </summary>
             <remarks>
             This value will change over time if the orbit is elliptical.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.SemiMajorAxis">
             <summary>
             The semi-major axis of the orbit, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.SemiMinorAxis">
             <summary>
             The semi-minor axis of the orbit, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.Speed">
             <summary>
             The current orbital speed of the object in meters per second.
             </summary>
             <remarks>
             This value will change over time if the orbit is elliptical.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.TimeToApoapsis">
             <summary>
             The time until the object reaches apoapsis, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.TimeToPeriapsis">
             <summary>
             The time until the object reaches periapsis, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.TimeToSOIChange">
             <summary>
             The time until the object changes sphere of influence, in seconds. Returns <c>NaN</c>
             if the object is not going to change sphere of influence.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Orbit.TrueAnomaly">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/True_anomaly">true anomaly</a>.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Parachute">
             <summary>
             A parachute. Obtained by calling <see cref="M:SpaceCenter.Part.Parachute" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parachute.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parachute.Arm">
             <summary>
             Deploys the parachute. This has no effect if the parachute has already
             been armed or deployed. Only applicable to RealChutes parachutes.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parachute.Deploy">
             <summary>
             Deploys the parachute. This has no effect if the parachute has already
             been deployed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parachute.Armed">
             <summary>
             Whether the parachute has been armed or deployed. Only applicable to
             RealChutes parachutes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parachute.DeployAltitude">
             <summary>
             The altitude at which the parachute will full deploy, in meters.
             Only applicable to stock parachutes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parachute.DeployMinPressure">
             <summary>
             The minimum pressure at which the parachute will semi-deploy, in atmospheres.
             Only applicable to stock parachutes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parachute.Deployed">
             <summary>
             Whether the parachute has been deployed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parachute.Part">
             <summary>
             The part object for this parachute.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parachute.State">
             <summary>
             The current state of the parachute.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Part">
             <summary>
             Represents an individual part. Vessels are made up of multiple parts.
             Instances of this class can be obtained by several methods in <see cref="T:SpaceCenter.Parts" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.AddForce(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Exert a constant force on the part, acting at the given position.
             </summary>
             <returns>An object that can be used to remove or modify the force.</returns>
             <param name="force">A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</param>
             <param name="position">The position at which the force acts, as a vector.</param>
             <param name="referenceFrame">The reference frame that the
             force and position are in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.BoundingBox(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The axis-aligned bounding box of the part in the given reference frame.
             </summary>
             <returns>The positions of the minimum and maximum vertices of the box,
             as position vectors.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vectors are in.</param>
             <remarks>
             This is computed from the collision mesh of the part.
             If the part is not collidable, the box has zero volume and is centered on
             the <see cref="M:SpaceCenter.Part.Position" /> of the part.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.CenterOfMass(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the parts center of mass in the given reference frame.
             If the part is physicsless, this is equivalent to <see cref="M:SpaceCenter.Part.Position" />.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.Direction(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction the part points in, in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.InstantaneousForce(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Exert an instantaneous force on the part, acting at the given position.
             </summary>
             <param name="force">A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</param>
             <param name="position">The position at which the force acts, as a vector.</param>
             <param name="referenceFrame">The reference frame that the
             force and position are in.</param>
             <remarks>The force is applied instantaneously in a single physics update.</remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.Position(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the part in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
             <remarks>
             This is a fixed position in the part, defined by the parts model.
             It s not necessarily the same as the parts center of mass.
             Use <see cref="M:SpaceCenter.Part.CenterOfMass" /> to get the parts center of mass.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.Rotation(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The rotation of the part, in the given reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Part.Velocity(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The linear velocity of the part in the given reference frame.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the body in meters per second.</returns>
             <param name="referenceFrame">The reference frame that the returned
             velocity vector is in.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Antenna">
             <summary>
             A <see cref="T:SpaceCenter.Antenna" /> if the part is an antenna, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.AxiallyAttached">
             <summary>
             Whether the part is axially attached to its parent, i.e. on the top
             or bottom of its parent. If the part has no parent, returns <c>false</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.CargoBay">
             <summary>
             A <see cref="T:SpaceCenter.CargoBay" /> if the part is a cargo bay, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.CenterOfMassReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this part, and centered on its
             center of mass.
             <list type="bullet"><item><description>The origin is at the center of mass of the part, as returned by
             <see cref="M:SpaceCenter.Part.CenterOfMass" />.</description></item><item><description>The axes rotate with the part.</description></item><item><description>The x, y and z axis directions depend on the design of the part.
             </description></item></list></summary>
             <remarks>
             For docking port parts, this reference frame is not necessarily equivalent to the
             reference frame for the docking port, returned by
             <see cref="M:SpaceCenter.DockingPort.ReferenceFrame" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Children">
             <summary>
             The parts children. Returns an empty list if the part has no children.
             This, in combination with <see cref="M:SpaceCenter.Part.Parent" />, can be used to traverse the vessels
             parts tree.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ControlSurface">
             <summary>
             A <see cref="T:SpaceCenter.ControlSurface" /> if the part is an aerodynamic control surface,
             otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Cost">
             <summary>
             The cost of the part, in units of funds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Crossfeed">
             <summary>
             Whether this part is crossfeed capable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.DecoupleStage">
             <summary>
             The stage in which this part will be decoupled. Returns -1 if the part is never
             decoupled from the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Decoupler">
             <summary>
             A <see cref="T:SpaceCenter.Decoupler" /> if the part is a decoupler, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.DockingPort">
             <summary>
             A <see cref="T:SpaceCenter.DockingPort" /> if the part is a docking port, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.DryMass">
             <summary>
             The mass of the part, not including any resources it contains, in kilograms.
             Returns zero if the part is massless.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.DynamicPressure">
             <summary>
             The dynamic pressure acting on the part, in Pascals.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Engine">
             <summary>
             An <see cref="T:SpaceCenter.Engine" /> if the part is an engine, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Experiment">
             <summary>
             An <see cref="T:SpaceCenter.Experiment" /> if the part is a science experiment, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Fairing">
             <summary>
             A <see cref="T:SpaceCenter.Fairing" /> if the part is a fairing, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.FuelLinesFrom">
             <summary>
             The parts that are connected to this part via fuel lines, where the direction of the
             fuel line is into this part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.FuelLinesTo">
             <summary>
             The parts that are connected to this part via fuel lines, where the direction of the
             fuel line is out of this part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.HighlightColor">
             <summary>
             The color used to highlight the part, as an RGB triple.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Highlighted">
             <summary>
             Whether the part is highlighted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ImpactTolerance">
             <summary>
             The impact tolerance of the part, in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.InertiaTensor">
             <summary>
             The inertia tensor of the part in the parts reference frame
             (<see cref="T:SpaceCenter.ReferenceFrame" />).
             Returns the 3x3 matrix as a list of elements, in row-major order.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Intake">
             <summary>
             An <see cref="T:SpaceCenter.Intake" /> if the part is an intake, otherwise <c>null</c>.
             </summary>
             <remarks>
             This includes any part that generates thrust. This covers many different types
             of engine, including liquid fuel rockets, solid rocket boosters and jet engines.
             For RCS thrusters see <see cref="T:SpaceCenter.RCS" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.IsFuelLine">
             <summary>
             Whether this part is a fuel line.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.LaunchClamp">
             <summary>
             A <see cref="T:SpaceCenter.LaunchClamp" /> if the part is a launch clamp, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Leg">
             <summary>
             A <see cref="T:SpaceCenter.Leg" /> if the part is a landing leg, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Light">
             <summary>
             A <see cref="T:SpaceCenter.Light" /> if the part is a light, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Mass">
             <summary>
             The current mass of the part, including resources it contains, in kilograms.
             Returns zero if the part is massless.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Massless">
             <summary>
             Whether the part is
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Massless_part">massless</a>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.MaxSkinTemperature">
             <summary>
             Maximum temperature that the skin of the part can survive, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.MaxTemperature">
             <summary>
             Maximum temperature that the part can survive, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Modules">
             <summary>
             The modules for this part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.MomentOfInertia">
             <summary>
             The moment of inertia of the part in <math>kg.m^2</math> around its center of mass
             in the parts reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Name">
             <summary>
             Internal name of the part, as used in
             <a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation">part cfg files</a>.
             For example "Mark1-2Pod".
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Parachute">
             <summary>
             A <see cref="T:SpaceCenter.Parachute" /> if the part is a parachute, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Parent">
             <summary>
             The parts parent. Returns <c>null</c> if the part does not have a parent.
             This, in combination with <see cref="M:SpaceCenter.Part.Children" />, can be used to traverse the vessels
             parts tree.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.RCS">
             <summary>
             A <see cref="T:SpaceCenter.RCS" /> if the part is an RCS block/thruster, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.RadiallyAttached">
             <summary>
             Whether the part is radially attached to its parent, i.e. on the side of its parent.
             If the part has no parent, returns <c>false</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Radiator">
             <summary>
             A <see cref="T:SpaceCenter.Radiator" /> if the part is a radiator, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ReactionWheel">
             <summary>
             A <see cref="T:SpaceCenter.ReactionWheel" /> if the part is a reaction wheel, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this part, and centered on a fixed
             position within the part, defined by the parts model.
             <list type="bullet"><item><description>The origin is at the position of the part, as returned by
             <see cref="M:SpaceCenter.Part.Position" />.</description></item><item><description>The axes rotate with the part.</description></item><item><description>The x, y and z axis directions depend on the design of the part.
             </description></item></list></summary>
             <remarks>
             For docking port parts, this reference frame is not necessarily equivalent to the
             reference frame for the docking port, returned by
             <see cref="M:SpaceCenter.DockingPort.ReferenceFrame" />.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ResourceConverter">
             <summary>
             A <see cref="T:SpaceCenter.ResourceConverter" /> if the part is a resource converter,
             otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ResourceHarvester">
             <summary>
             A <see cref="T:SpaceCenter.ResourceHarvester" /> if the part is a resource harvester,
             otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Resources">
             <summary>
             A <see cref="T:SpaceCenter.Resources" /> object for the part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Sensor">
             <summary>
             A <see cref="T:SpaceCenter.Sensor" /> if the part is a sensor, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Shielded">
             <summary>
             Whether the part is shielded from the exterior of the vessel, for example by a fairing.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.SkinTemperature">
             <summary>
             Temperature of the skin of the part, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.SolarPanel">
             <summary>
             A <see cref="T:SpaceCenter.SolarPanel" /> if the part is a solar panel, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Stage">
             <summary>
             The stage in which this part will be activated. Returns -1 if the part is not
             activated by staging.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Tag">
             <summary>
             The name tag for the part. Can be set to a custom string using the
             in-game user interface.
             </summary>
             <remarks>
             This string is shared with
             <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/61827-/">kOS</a>
             if it is installed.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Temperature">
             <summary>
             Temperature of the part, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalConductionFlux">
             <summary>
             The rate at which heat energy is conducting into or out of the part via contact with
             other parts. Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is
             losing heat energy.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalConvectionFlux">
             <summary>
             The rate at which heat energy is convecting into or out of the part from the
             surrounding atmosphere. Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is
             losing heat energy.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalInternalFlux">
             <summary>
             The rate at which heat energy is begin generated by the part.
             For example, some engines generate heat by combusting fuel.
             Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is losing
             heat energy.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalMass">
             <summary>
             A measure of how much energy it takes to increase the internal temperature of the part,
             in Joules per Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalRadiationFlux">
             <summary>
             The rate at which heat energy is radiating into or out of the part from the surrounding
             environment. Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is
             losing heat energy.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalResourceMass">
             <summary>
             A measure of how much energy it takes to increase the temperature of the resources
             contained in the part, in Joules per Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalSkinMass">
             <summary>
             A measure of how much energy it takes to increase the skin temperature of the part,
             in Joules per Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.ThermalSkinToInternalFlux">
             <summary>
             The rate at which heat energy is transferring between the part's skin and its internals.
             Measured in energy per unit time, or power, in Watts.
             A positive value means the part's internals are gaining heat energy,
             and negative means its skin is gaining heat energy.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Title">
             <summary>
             Title of the part, as shown when the part is right clicked in-game. For example "Mk1-2 Command Pod".
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Vessel">
             <summary>
             The vessel that contains this part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Part.Wheel">
             <summary>
             A <see cref="T:SpaceCenter.Wheel" /> if the part is a wheel, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Parts">
             <summary>
             Instances of this class are used to interact with the parts of a vessel.
             An instance can be obtained by calling <see cref="M:SpaceCenter.Vessel.Parts" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.InDecoupleStage(System.Int32)">
             <summary>
             A list of all parts that are decoupled in the given <paramref name="stage" />.
             </summary>
             <param name="stage"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.InStage(System.Int32)">
             <summary>
             A list of all parts that are activated in the given <paramref name="stage" />.
             </summary>
             <param name="stage"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.ModulesWithName(System.String)">
             <summary>
             A list of modules (combined across all parts in the vessel) whose
             <see cref="M:SpaceCenter.Module.Name" /> is <paramref name="moduleName" />.
             </summary>
             <param name="moduleName"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.WithModule(System.String)">
             <summary>
             A list of all parts that contain a <see cref="T:SpaceCenter.Module" /> whose
             <see cref="M:SpaceCenter.Module.Name" /> is <paramref name="moduleName" />.
             </summary>
             <param name="moduleName"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.WithName(System.String)">
             <summary>
             A list of parts whose <see cref="M:SpaceCenter.Part.Name" /> is <paramref name="name" />.
             </summary>
             <param name="name"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.WithTag(System.String)">
             <summary>
             A list of all parts whose <see cref="M:SpaceCenter.Part.Tag" /> is <paramref name="tag" />.
             </summary>
             <param name="tag"></param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Parts.WithTitle(System.String)">
             <summary>
             A list of all parts whose <see cref="M:SpaceCenter.Part.Title" /> is <paramref name="title" />.
             </summary>
             <param name="title"></param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.All">
             <summary>
             A list of all of the vessels parts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Antennas">
             <summary>
             A list of all antennas in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.CargoBays">
             <summary>
             A list of all cargo bays in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.ControlSurfaces">
             <summary>
             A list of all control surfaces in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Controlling">
             <summary>
             The part from which the vessel is controlled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Decouplers">
             <summary>
             A list of all decouplers in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.DockingPorts">
             <summary>
             A list of all docking ports in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Engines">
             <summary>
             A list of all engines in the vessel.
             </summary>
             <remarks>
             This includes any part that generates thrust. This covers many different types
             of engine, including liquid fuel rockets, solid rocket boosters, jet engines and
             RCS thrusters.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Experiments">
             <summary>
             A list of all science experiments in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Fairings">
             <summary>
             A list of all fairings in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Intakes">
             <summary>
             A list of all intakes in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.LaunchClamps">
             <summary>
             A list of all launch clamps attached to the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Legs">
             <summary>
             A list of all landing legs attached to the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Lights">
             <summary>
             A list of all lights in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Parachutes">
             <summary>
             A list of all parachutes in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.RCS">
             <summary>
             A list of all RCS blocks/thrusters in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Radiators">
             <summary>
             A list of all radiators in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.ReactionWheels">
             <summary>
             A list of all reaction wheels in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.ResourceConverters">
             <summary>
             A list of all resource converters in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.ResourceHarvesters">
             <summary>
             A list of all resource harvesters in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Root">
             <summary>
             The vessels root part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Sensors">
             <summary>
             A list of all sensors in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.SolarPanels">
             <summary>
             A list of all solar panels in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Parts.Wheels">
             <summary>
             A list of all wheels in the vessel.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Propellant">
             <summary>
             A propellant for an engine. Obtains by calling <see cref="M:SpaceCenter.Engine.Propellants" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Propellant.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.CurrentAmount">
             <summary>
             The current amount of propellant.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.CurrentRequirement">
             <summary>
             The required amount of propellant.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.DrawStackGauge">
             <summary>
             If this propellant has a stack gauge or not.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.IgnoreForIsp">
             <summary>
             If this propellant should be ignored when calculating required mass flow
             given specific impulse.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.IgnoreForThrustCurve">
             <summary>
             If this propellant should be ignored for thrust curve calculations.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.IsDeprived">
             <summary>
             If this propellant is deprived.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.Name">
             <summary>
             The name of the propellant.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.Ratio">
             <summary>
             The propellant ratio.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.TotalResourceAvailable">
             <summary>
             The total amount of the underlying resource currently reachable given
             resource flow rules.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Propellant.TotalResourceCapacity">
             <summary>
             The total vehicle capacity for the underlying propellant resource,
             restricted by resource flow rules.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.RCS">
             <summary>
             An RCS block or thruster. Obtained by calling <see cref="M:SpaceCenter.Part.RCS" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.RCS.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.Active">
             <summary>
             Whether the RCS thrusters are active.
             An RCS thruster is inactive if the RCS action group is disabled
             (<see cref="M:SpaceCenter.Control.RCS" />), the RCS thruster itself is not enabled
             (<see cref="M:SpaceCenter.RCS.Enabled" />) or it is covered by a fairing (<see cref="M:SpaceCenter.Part.Shielded" />).
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this RCS,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
             Returns zero if RCS is disable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.Enabled">
             <summary>
             Whether the RCS thrusters are enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.ForwardEnabled">
             <summary>
             Whether the RCS thruster will fire when pitch control input is given.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.HasFuel">
             <summary>
             Whether the RCS has fuel available.
             </summary>
             <remarks>
             The RCS thruster must be activated for this property to update correctly.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.KerbinSeaLevelSpecificImpulse">
             <summary>
             The specific impulse of the RCS at sea level on Kerbin, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.MaxThrust">
             <summary>
             The maximum amount of thrust that can be produced by the RCS thrusters when active,
             in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.MaxVacuumThrust">
             <summary>
             The maximum amount of thrust that can be produced by the RCS thrusters when active
             in a vacuum, in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.Part">
             <summary>
             The part object for this RCS.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.PitchEnabled">
             <summary>
             Whether the RCS thruster will fire when pitch control input is given.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.PropellantRatios">
             <summary>
             The ratios of resources that the RCS consumes. A dictionary mapping resource names
             to the ratios at which they are consumed by the RCS.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.Propellants">
             <summary>
             The names of resources that the RCS consumes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.RightEnabled">
             <summary>
             Whether the RCS thruster will fire when roll control input is given.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.RollEnabled">
             <summary>
             Whether the RCS thruster will fire when roll control input is given.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.SpecificImpulse">
             <summary>
             The current specific impulse of the RCS, in seconds. Returns zero
             if the RCS is not active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.Thrusters">
             <summary>
             A list of thrusters, one of each nozzel in the RCS part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.UpEnabled">
             <summary>
             Whether the RCS thruster will fire when yaw control input is given.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.VacuumSpecificImpulse">
             <summary>
             The vacuum specific impulse of the RCS, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.RCS.YawEnabled">
             <summary>
             Whether the RCS thruster will fire when yaw control input is given.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Radiator">
             <summary>
             A radiator. Obtained by calling <see cref="M:SpaceCenter.Part.Radiator" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Radiator.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Radiator.Deployable">
             <summary>
             Whether the radiator is deployable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Radiator.Deployed">
             <summary>
             For a deployable radiator, <c>true</c> if the radiator is extended.
             If the radiator is not deployable, this is always <c>true</c>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Radiator.Part">
             <summary>
             The part object for this radiator.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Radiator.State">
             <summary>
             The current state of the radiator.
             </summary>
             <remarks>
             A fixed radiator is always <see cref="M:SpaceCenter.RadiatorState.Extended" />.
             </remarks>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ReactionWheel">
             <summary>
             A reaction wheel. Obtained by calling <see cref="M:SpaceCenter.Part.ReactionWheel" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ReactionWheel.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ReactionWheel.Active">
             <summary>
             Whether the reaction wheel is active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ReactionWheel.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this reaction wheel,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
             Returns zero if the reaction wheel is inactive or broken.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ReactionWheel.Broken">
             <summary>
             Whether the reaction wheel is broken.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ReactionWheel.MaxTorque">
             <summary>
             The maximum torque, in Newton meters, that can be produced by this reaction wheel,
             when it is active, in the positive and negative pitch, roll and yaw axes of the vessel.
             These axes correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ReactionWheel.Part">
             <summary>
             The part object for this reaction wheel.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ReferenceFrame">
             <summary>
             Represents a reference frame for positions, rotations and
             velocities. Contains:
             <list type="bullet"><item><description>The position of the origin.</description></item><item><description>The directions of the x, y and z axes.</description></item><item><description>The linear velocity of the frame.</description></item><item><description>The angular velocity of the frame.</description></item></list></summary>
             <remarks>
             This class does not contain any properties or methods. It is only
             used as a parameter to other functions.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ReferenceFrame.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ReferenceFrame.CreateHybrid(KRPC.Client.IConnection,KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Create a hybrid reference frame. This is a custom reference frame
             whose components inherited from other reference frames.
             </summary>
             <param name="position">The reference frame providing the position of the origin.</param>
             <param name="rotation">The reference frame providing the rotation of the frame.</param>
             <param name="velocity">The reference frame providing the linear velocity of the frame.
             </param>
             <param name="angularVelocity">The reference frame providing the angular velocity
             of the frame.</param>
             <remarks>
             The <paramref name="position" /> reference frame is required but all other
             reference frames are optional. If omitted, they are set to the
             <paramref name="position" /> reference frame.
             </remarks>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ReferenceFrame.CreateRelative(KRPC.Client.IConnection,KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double})">
             <summary>
             Create a relative reference frame. This is a custom reference frame
             whose components offset the components of a parent reference frame.
             </summary>
             <param name="referenceFrame">The parent reference frame on which to
             base this reference frame.</param>
             <param name="position">The offset of the position of the origin,
             as a position vector. Defaults to <math>(0, 0, 0)</math></param>
             <param name="rotation">The rotation to apply to the parent frames rotation,
             as a quaternion of the form <math>(x, y, z, w)</math>.
             Defaults to <math>(0, 0, 0, 1)</math> (i.e. no rotation)</param>
             <param name="velocity">The linear velocity to offset the parent frame by,
             as a vector pointing in the direction of travel, whose magnitude is the speed in
             meters per second. Defaults to <math>(0, 0, 0)</math>.</param>
             <param name="angularVelocity">The angular velocity to offset the parent frame by,
             as a vector. This vector points in the direction of the axis of rotation,
             and its magnitude is the speed of the rotation in radians per second.
             Defaults to <math>(0, 0, 0)</math>.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Resource">
             <summary>
             An individual resource stored within a part.
             Created using methods in the <see cref="T:SpaceCenter.Resources" /> class.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resource.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.Amount">
             <summary>
             The amount of the resource that is currently stored in the part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.Density">
             <summary>
             The density of the resource, in <math>kg/l</math>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.Enabled">
             <summary>
             Whether use of this resource is enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.FlowMode">
             <summary>
             The flow mode of the resource.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.Max">
             <summary>
             The total amount of the resource that can be stored in the part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.Name">
             <summary>
             The name of the resource.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resource.Part">
             <summary>
             The part containing the resource.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ResourceConverter">
             <summary>
             A resource converter. Obtained by calling <see cref="M:SpaceCenter.Part.ResourceConverter" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.Active(System.Int32)">
             <summary>
             True if the specified converter is active.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.Inputs(System.Int32)">
             <summary>
             List of the names of resources consumed by the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.Name(System.Int32)">
             <summary>
             The name of the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.Outputs(System.Int32)">
             <summary>
             List of the names of resources produced by the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.Start(System.Int32)">
             <summary>
             Start the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.State(System.Int32)">
             <summary>
             The state of the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.StatusInfo(System.Int32)">
             <summary>
             Status information for the specified converter.
             This is the full status message shown in the in-game UI.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceConverter.Stop(System.Int32)">
             <summary>
             Stop the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceConverter.CoreTemperature">
             <summary>
             The core temperature of the converter, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceConverter.Count">
             <summary>
             The number of converters in the part.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceConverter.OptimumCoreTemperature">
             <summary>
             The core temperature at which the converter will operate with peak efficiency, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceConverter.Part">
             <summary>
             The part object for this converter.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceConverter.ThermalEfficiency">
             <summary>
             The thermal efficiency of the converter, as a percentage of its maximum.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ResourceHarvester">
             <summary>
             A resource harvester (drill). Obtained by calling <see cref="M:SpaceCenter.Part.ResourceHarvester" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceHarvester.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.Active">
             <summary>
             Whether the harvester is actively drilling.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.CoreTemperature">
             <summary>
             The core temperature of the drill, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.Deployed">
             <summary>
             Whether the harvester is deployed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.ExtractionRate">
             <summary>
             The rate at which the drill is extracting ore, in units per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.OptimumCoreTemperature">
             <summary>
             The core temperature at which the drill will operate with peak efficiency, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.Part">
             <summary>
             The part object for this harvester.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.State">
             <summary>
             The state of the harvester.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceHarvester.ThermalEfficiency">
             <summary>
             The thermal efficiency of the drill, as a percentage of its maximum.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ResourceTransfer">
             <summary>
             Transfer resources between parts.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceTransfer.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ResourceTransfer.Start(KRPC.Client.IConnection,KRPC.Client.Services.SpaceCenter.Part,KRPC.Client.Services.SpaceCenter.Part,System.String,System.Single)">
             <summary>
             Start transferring a resource transfer between a pair of parts. The transfer will move
             at most <paramref name="maxAmount" /> units of the resource, depending on how much of
             the resource is available in the source part and how much storage is available in the
             destination part.
             Use <see cref="M:SpaceCenter.ResourceTransfer.Complete" /> to check if the transfer is complete.
             Use <see cref="M:SpaceCenter.ResourceTransfer.Amount" /> to see how much of the resource has been transferred.
             </summary>
             <param name="fromPart">The part to transfer to.</param>
             <param name="toPart">The part to transfer from.</param>
             <param name="resource">The name of the resource to transfer.</param>
             <param name="maxAmount">The maximum amount of resource to transfer.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceTransfer.Amount">
             <summary>
             The amount of the resource that has been transferred.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ResourceTransfer.Complete">
             <summary>
             Whether the transfer has completed.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Resources">
             <summary>
             Represents the collection of resources stored in a vessel, stage or part.
             Created by calling <see cref="M:SpaceCenter.Vessel.Resources" />,
             <see cref="M:SpaceCenter.Vessel.ResourcesInDecoupleStage" /> or
             <see cref="M:SpaceCenter.Part.Resources" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.Amount(System.String)">
             <summary>
             Returns the amount of a resource that is currently stored.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.HasResource(System.String)">
             <summary>
             Check whether the named resource can be stored.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.Max(System.String)">
             <summary>
             Returns the amount of a resource that can be stored.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.WithResource(System.String)">
             <summary>
             All the individual resources with the given name that can be stored.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.Density(KRPC.Client.IConnection,System.String)">
             <summary>
             Returns the density of a resource, in <math>kg/l</math>.
             </summary>
             <param name="name">The name of the resource.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Resources.FlowMode(KRPC.Client.IConnection,System.String)">
             <summary>
             Returns the flow mode of a resource.
             </summary>
             <param name="name">The name of the resource.</param>
             <param name="connection">A connection object.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resources.All">
             <summary>
             All the individual resources that can be stored.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resources.Enabled">
             <summary>
             Whether use of all the resources are enabled.
             </summary>
             <remarks>
             This is <c>true</c> if all of the resources are enabled.
             If any of the resources are not enabled, this is <c>false</c>.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Resources.Names">
             <summary>
             A list of resource names that can be stored.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ScienceData">
             <summary>
             Obtained by calling <see cref="M:SpaceCenter.Experiment.Data" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ScienceData.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceData.DataAmount">
             <summary>
             Data amount.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceData.ScienceValue">
             <summary>
             Science value.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceData.TransmitValue">
             <summary>
             Transmit value.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.ScienceSubject">
             <summary>
             Obtained by calling <see cref="M:SpaceCenter.Experiment.ScienceSubject" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.ScienceSubject.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.DataScale">
             <summary>
             Multiply science value by this to determine data amount in mits.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.IsComplete">
             <summary>
             Whether the experiment has been completed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.Science">
             <summary>
             Amount of science already earned from this subject, not updated until after
             transmission/recovery.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.ScienceCap">
             <summary>
             Total science allowable for this subject.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.ScientificValue">
             <summary>
             Diminishing value multiplier for decreasing the science value returned from repeated
             experiments.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.SubjectValue">
             <summary>
             Multiplier for specific Celestial Body/Experiment Situation combination.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.ScienceSubject.Title">
             <summary>
             Title of science subject, displayed in science archives
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Sensor">
             <summary>
             A sensor, such as a thermometer. Obtained by calling <see cref="M:SpaceCenter.Part.Sensor" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Sensor.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Sensor.Active">
             <summary>
             Whether the sensor is active.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Sensor.Part">
             <summary>
             The part object for this sensor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Sensor.Value">
             <summary>
             The current value of the sensor.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.SolarPanel">
             <summary>
             A solar panel. Obtained by calling <see cref="M:SpaceCenter.Part.SolarPanel" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.SolarPanel.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.SolarPanel.Deployable">
             <summary>
             Whether the solar panel is deployable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.SolarPanel.Deployed">
             <summary>
             Whether the solar panel is extended.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.SolarPanel.EnergyFlow">
             <summary>
             The current amount of energy being generated by the solar panel, in
             units of charge per second.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.SolarPanel.Part">
             <summary>
             The part object for this solar panel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.SolarPanel.State">
             <summary>
             The current state of the solar panel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.SolarPanel.SunExposure">
             <summary>
             The current amount of sunlight that is incident on the solar panel,
             as a percentage. A value between 0 and 1.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Thruster">
             <summary>
             The component of an <see cref="T:SpaceCenter.Engine" /> or <see cref="T:SpaceCenter.RCS" /> part that generates thrust.
             Can obtained by calling <see cref="M:SpaceCenter.Engine.Thrusters" /> or <see cref="M:SpaceCenter.RCS.Thrusters" />.
             </summary>
             <remarks>
             Engines can consist of multiple thrusters.
             For example, the S3 KS-25x4 "Mammoth" has four rocket nozzels, and so consists of
             four thrusters.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Thruster.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Thruster.GimbalPosition(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Position around which the gimbal pivots.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Thruster.InitialThrustDirection(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction of the force generated by the thruster, when the engine is in its
             initial position (no gimballing), in the given reference frame.
             This is opposite to the direction in which the thruster expels propellant.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Thruster.InitialThrustPosition(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position at which the thruster generates thrust, when the engine is in its
             initial position (no gimballing), in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
             <remarks>
             This position can move when the gimbal rotates. This is because the thrust position and
             gimbal position are not necessarily the same.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Thruster.ThrustDirection(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction of the force generated by the thruster, in the given reference frame.
             This is opposite to the direction in which the thruster expels propellant.
             For gimballed engines, this takes into account the current rotation of the gimbal.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Thruster.ThrustPosition(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position at which the thruster generates thrust, in the given reference frame.
             For gimballed engines, this takes into account the current rotation of the gimbal.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Thruster.GimbalAngle">
             <summary>
             The current gimbal angle in the pitch, roll and yaw axes, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Thruster.Gimballed">
             <summary>
             Whether the thruster is gimballed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Thruster.Part">
             <summary>
             The <see cref="T:SpaceCenter.Part" /> that contains this thruster.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Thruster.ThrustReferenceFrame">
             <summary>
             A reference frame that is fixed relative to the thruster and orientated with
             its thrust direction (<see cref="M:SpaceCenter.Thruster.ThrustDirection" />).
             For gimballed engines, this takes into account the current rotation of the gimbal.
             <list type="bullet"><item><description>
             The origin is at the position of thrust for this thruster
             (<see cref="M:SpaceCenter.Thruster.ThrustPosition" />).</description></item><item><description>
             The axes rotate with the thrust direction.
             This is the direction in which the thruster expels propellant, including any gimballing.
             </description></item><item><description>The y-axis points along the thrust direction.</description></item><item><description>The x-axis and z-axis are perpendicular to the thrust direction.
             </description></item></list></summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Vessel">
             <summary>
             These objects are used to interact with vessels in KSP. This includes getting
             orbital and flight data, manipulating control inputs and managing resources.
             Created using <see cref="M:SpaceCenter.ActiveVessel" /> or <see cref="M:SpaceCenter.Vessels" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.AngularVelocity(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The angular velocity of the vessel, in the given reference frame.
             </summary>
             <returns>The angular velocity as a vector. The magnitude of the vector is the rotational
             speed of the vessel, in radians per second. The direction of the vector indicates the
             axis of rotation, using the right-hand rule.</returns>
             <param name="referenceFrame">The reference frame the returned
             angular velocity is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.BoundingBox(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The axis-aligned bounding box of the vessel in the given reference frame.
             </summary>
             <returns>The positions of the minimum and maximum vertices of the box,
             as position vectors.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vectors are in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.Direction(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The direction in which the vessel is pointing, in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.Flight(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             Returns a <see cref="T:SpaceCenter.Flight" /> object that can be used to get flight
             telemetry for the vessel, in the specified reference frame.
             </summary>
             <param name="referenceFrame">
             Reference frame. Defaults to the vessel's surface reference frame
             (<see cref="M:SpaceCenter.Vessel.SurfaceReferenceFrame" />).
             </param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.Position(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The position of the center of mass of the vessel, in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.Recover">
             <summary>
             Recover the vessel.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.ResourcesInDecoupleStage(System.Int32,System.Boolean)">
             <summary>
             Returns a <see cref="T:SpaceCenter.Resources" /> object, that can used to get
             information about resources stored in a given <paramref name="stage" />.
             </summary>
             <param name="stage">Get resources for parts that are decoupled in this stage.</param>
             <param name="cumulative">When <c>false</c>, returns the resources for parts
             decoupled in just the given stage. When <c>true</c> returns the resources decoupled in
             the given stage and all subsequent stages combined.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.Rotation(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The rotation of the vessel, in the given reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Vessel.Velocity(KRPC.Client.Services.SpaceCenter.ReferenceFrame)">
             <summary>
             The velocity of the center of mass of the vessel, in the given reference frame.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the body in meters per second.</returns>
             <param name="referenceFrame">The reference frame that the returned
             velocity vector is in.</param>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AutoPilot">
             <summary>
             An <see cref="T:SpaceCenter.AutoPilot" /> object, that can be used to perform
             simple auto-piloting of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableControlSurfaceTorque">
             <summary>
             The maximum torque that the aerodynamic control surfaces can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableEngineTorque">
             <summary>
             The maximum torque that the currently active and gimballed engines can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableOtherTorque">
             <summary>
             The maximum torque that parts (excluding reaction wheels, gimballed engines,
             RCS and control surfaces) can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableRCSTorque">
             <summary>
             The maximum torque that the currently active RCS thrusters can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableReactionWheelTorque">
             <summary>
             The maximum torque that the currently active and powered reaction wheels can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableThrust">
             <summary>
             Gets the total available thrust that can be produced by the vessel's
             active engines, in Newtons. This is computed by summing
             <see cref="M:SpaceCenter.Engine.AvailableThrust" /> for every active engine in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.AvailableTorque">
             <summary>
             The maximum torque that the vessel generates. Includes contributions from
             reaction wheels, RCS, gimballed engines and aerodynamic control surfaces.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Biome">
             <summary>
             The name of the biome the vessel is currently in.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Comms">
             <summary>
             Returns a <see cref="T:SpaceCenter.Comms" /> object that can be used to interact
             with CommNet for this vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Control">
             <summary>
             Returns a <see cref="T:SpaceCenter.Control" /> object that can be used to manipulate
             the vessel's control inputs. For example, its pitch/yaw/roll controls,
             RCS and thrust.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Crew">
             <summary>
             The crew in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.CrewCapacity">
             <summary>
             The number of crew that can occupy the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.CrewCount">
             <summary>
             The number of crew that are occupying the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.DryMass">
             <summary>
             The total mass of the vessel, excluding resources, in kg.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.InertiaTensor">
             <summary>
             The inertia tensor of the vessel around its center of mass,
             in the vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             Returns the 3x3 matrix as a list of elements, in row-major order.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.KerbinSeaLevelSpecificImpulse">
             <summary>
             The combined specific impulse of all active engines at sea level on Kerbin, in seconds.
             This is computed using the formula
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.MET">
             <summary>
             The mission elapsed time in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Mass">
             <summary>
             The total mass of the vessel, including resources, in kg.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.MaxThrust">
             <summary>
             The total maximum thrust that can be produced by the vessel's active
             engines, in Newtons. This is computed by summing
             <see cref="M:SpaceCenter.Engine.MaxThrust" /> for every active engine.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.MaxVacuumThrust">
             <summary>
             The total maximum thrust that can be produced by the vessel's active
             engines when the vessel is in a vacuum, in Newtons. This is computed by
             summing <see cref="M:SpaceCenter.Engine.MaxVacuumThrust" /> for every active engine.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.MomentOfInertia">
             <summary>
             The moment of inertia of the vessel around its center of mass in <math>kg.m^2</math>.
             The inertia values in the returned 3-tuple are around the
             pitch, roll and yaw directions respectively.
             This corresponds to the vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Name">
             <summary>
             The name of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Orbit">
             <summary>
             The current orbit of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.OrbitalReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the vessels orbital prograde/normal/radial directions.
             <list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the orbital prograde/normal/radial directions.</description></item><item><description>The x-axis points in the orbital anti-radial direction.</description></item><item><description>The y-axis points in the orbital prograde direction.</description></item><item><description>The z-axis points in the orbital normal direction.</description></item></list></summary>
             <remarks>
             Be careful not to confuse this with 'orbit' mode on the navball.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Parts">
             <summary>
             A <see cref="T:SpaceCenter.Parts" /> object, that can used to interact with the parts that make up this vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Recoverable">
             <summary>
             Whether the vessel is recoverable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the vessel.
             <list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the vessel.</description></item><item><description>The x-axis points out to the right of the vessel.</description></item><item><description>The y-axis points in the forward direction of the vessel.</description></item><item><description>The z-axis points out of the bottom off the vessel.</description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Resources">
             <summary>
             A <see cref="T:SpaceCenter.Resources" /> object, that can used to get information
             about resources stored in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Situation">
             <summary>
             The situation the vessel is in.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.SpecificImpulse">
             <summary>
             The combined specific impulse of all active engines, in seconds. This is computed using the formula
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.SurfaceReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the surface of the body being orbited.
             <list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the north and up directions on the surface of the body.</description></item><item><description>The x-axis points in the <a href="https://en.wikipedia.org/wiki/Zenith">zenith</a>
             direction (upwards, normal to the body being orbited, from the center of the body towards the center of
             mass of the vessel).</description></item><item><description>The y-axis points northwards towards the
             <a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a> (north, and tangential to the
             surface of the body -- the direction in which a compass would point when on the surface).</description></item><item><description>The z-axis points eastwards towards the
             <a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a> (east, and tangential to the
             surface of the body -- east on a compass when on the surface).</description></item></list></summary>
             <remarks>
             Be careful not to confuse this with 'surface' mode on the navball.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.SurfaceVelocityReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the velocity vector of the vessel relative
             to the surface of the body being orbited.
             <list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the vessel's velocity vector.</description></item><item><description>The y-axis points in the direction of the vessel's velocity vector,
             relative to the surface of the body being orbited.</description></item><item><description>The z-axis is in the plane of the
             <a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a>.</description></item><item><description>The x-axis is orthogonal to the other two axes.</description></item></list></summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Thrust">
             <summary>
             The total thrust currently being produced by the vessel's engines, in
             Newtons. This is computed by summing <see cref="M:SpaceCenter.Engine.Thrust" /> for
             every engine in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.Type">
             <summary>
             The type of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Vessel.VacuumSpecificImpulse">
             <summary>
             The combined vacuum specific impulse of all active engines, in seconds. This is computed using the formula
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Waypoint">
             <summary>
             Represents a waypoint. Can be created using <see cref="M:SpaceCenter.WaypointManager.AddWaypoint" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Waypoint.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Waypoint.Remove">
             <summary>
             Removes the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.BedrockAltitude">
             <summary>
             The altitude of the waypoint above the surface of the body, in meters.
             When over water, this is the altitude above the sea floor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Body">
             <summary>
             The celestial body the waypoint is attached to.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Clustered">
             <summary><c>true</c> if this waypoint is part of a set of clustered waypoints with greek letter
             names appended (Alpha, Beta, Gamma, etc).
             If <c>true</c>, there is a one-to-one correspondence with the greek letter name and
             the <see cref="M:SpaceCenter.Waypoint.Index" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Color">
             <summary>
             The seed of the icon color. See <see cref="M:SpaceCenter.WaypointManager.Colors" /> for example colors.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Contract">
             <summary>
             The associated contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Grounded">
             <summary><c>true</c> if the waypoint is attached to the ground.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.HasContract">
             <summary>
             Whether the waypoint belongs to a contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Icon">
             <summary>
             The icon of the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Index">
             <summary>
             The integer index of this waypoint within its cluster of sibling waypoints.
             In other words, when you have a cluster of waypoints called "Somewhere Alpha",
             "Somewhere Beta" and "Somewhere Gamma", the alpha site has index 0, the beta
             site has index 1 and the gamma site has index 2.
             When <see cref="M:SpaceCenter.Waypoint.Clustered" /> is <c>false</c>, this is zero.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Latitude">
             <summary>
             The latitude of the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Longitude">
             <summary>
             The longitude of the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.MeanAltitude">
             <summary>
             The altitude of the waypoint above sea level, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.Name">
             <summary>
             The name of the waypoint as it appears on the map and the contract.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.NearSurface">
             <summary><c>true</c> if the waypoint is near to the surface of a body.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Waypoint.SurfaceAltitude">
             <summary>
             The altitude of the waypoint above the surface of the body or sea level,
             whichever is closer, in meters.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.WaypointManager">
             <summary>
             Waypoints are the location markers you can see on the map view showing you where contracts are targeted for.
             With this structure, you can obtain coordinate data for the locations of these waypoints.
             Obtained by calling <see cref="M:SpaceCenter.WaypointManager" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.WaypointManager.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.WaypointManager.AddWaypoint(System.Double,System.Double,KRPC.Client.Services.SpaceCenter.CelestialBody,System.String)">
             <summary>
             Creates a waypoint at the given position at ground level, and returns a
             <see cref="T:SpaceCenter.Waypoint" /> object that can be used to modify it.
             </summary>
             <param name="latitude">Latitude of the waypoint.</param>
             <param name="longitude">Longitude of the waypoint.</param>
             <param name="body">Celestial body the waypoint is attached to.</param>
             <param name="name">Name of the waypoint.</param>
             <returns></returns>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.WaypointManager.AddWaypointAtAltitude(System.Double,System.Double,System.Double,KRPC.Client.Services.SpaceCenter.CelestialBody,System.String)">
             <summary>
             Creates a waypoint at the given position and altitude, and returns a
             <see cref="T:SpaceCenter.Waypoint" /> object that can be used to modify it.
             </summary>
             <param name="latitude">Latitude of the waypoint.</param>
             <param name="longitude">Longitude of the waypoint.</param>
             <param name="altitude">Altitude (above sea level) of the waypoint.</param>
             <param name="body">Celestial body the waypoint is attached to.</param>
             <param name="name">Name of the waypoint.</param>
             <returns></returns>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.WaypointManager.Colors">
             <summary>
             An example map of known color - seed pairs.
             Any other integers may be used as seed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.WaypointManager.Icons">
             <summary>
             Returns all available icons (from "GameData/Squad/Contracts/Icons/").
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.WaypointManager.Waypoints">
             <summary>
             A list of all existing waypoints.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.SpaceCenter.Wheel">
             <summary>
             A wheel. Includes landing gear and rover wheels.
             Obtained by calling <see cref="M:SpaceCenter.Part.Wheel" />.
             Can be used to control the motors, steering and deployment of wheels, among other things.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.SpaceCenter.Wheel.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.AutoFrictionControl">
             <summary>
             Whether automatic friction control is enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Brakes">
             <summary>
             The braking force, as a percentage of maximum, when the brakes are applied.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Broken">
             <summary>
             Whether the wheel is broken.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Deflection">
             <summary>
             Current deflection of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Deployable">
             <summary>
             Whether the wheel is deployable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Deployed">
             <summary>
             Whether the wheel is deployed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.DriveLimiter">
             <summary>
             Manual setting for the motor limiter.
             Only takes effect if the wheel has automatic traction control disabled.
             A value between 0 and 100 inclusive.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Grounded">
             <summary>
             Whether the wheel is touching the ground.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.HasBrakes">
             <summary>
             Whether the wheel has brakes.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.HasSuspension">
             <summary>
             Whether the wheel has suspension.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.ManualFrictionControl">
             <summary>
             Manual friction control value. Only has an effect if automatic friction control is disabled.
             A value between 0 and 5 inclusive.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.MotorEnabled">
             <summary>
             Whether the motor is enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.MotorInverted">
             <summary>
             Whether the direction of the motor is inverted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.MotorOutput">
             <summary>
             The output of the motor. This is the torque currently being generated, in Newton meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.MotorState">
             <summary>
             Whether the direction of the motor is inverted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Part">
             <summary>
             The part object for this wheel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Powered">
             <summary>
             Whether the wheel is powered by a motor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Radius">
             <summary>
             Radius of the wheel, in meters.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Repairable">
             <summary>
             Whether the wheel is repairable.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Slip">
             <summary>
             Current slip of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.State">
             <summary>
             The current state of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Steerable">
             <summary>
             Whether the wheel has steering.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.SteeringEnabled">
             <summary>
             Whether the wheel steering is enabled.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.SteeringInverted">
             <summary>
             Whether the wheel steering is inverted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.Stress">
             <summary>
             Current stress on the wheel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.StressPercentage">
             <summary>
             Current stress on the wheel as a percentage of its stress tolerance.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.StressTolerance">
             <summary>
             Stress tolerance of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.SuspensionDamperStrength">
             <summary>
             Suspension damper strength, as set in the editor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.SuspensionSpringStrength">
             <summary>
             Suspension spring strength, as set in the editor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.TractionControl">
             <summary>
             Setting for the traction control.
             Only takes effect if the wheel has automatic traction control enabled.
             A value between 0 and 5 inclusive.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.SpaceCenter.Wheel.TractionControlEnabled">
             <summary>
             Whether automatic traction control is enabled.
             A wheel only has traction control if it is powered.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.Drawing.ExtensionMethods">
             <summary>
             Extension methods for Drawing service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.ExtensionMethods.Drawing(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the Drawing service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.Drawing.Service">
             <summary>
             Drawing service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Service.AddDirection(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame,System.Single,System.Boolean)">
             <summary>
             Draw a direction vector in the scene, from the center of mass of the active vessel.
             </summary>
             <param name="direction">Direction to draw the line in.</param>
             <param name="referenceFrame">Reference frame that the direction is in.</param>
             <param name="length">The length of the line.</param>
             <param name="visible">Whether the line is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Service.AddLine(KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Services.SpaceCenter.ReferenceFrame,System.Boolean)">
             <summary>
             Draw a line in the scene.
             </summary>
             <param name="start">Position of the start of the line.</param>
             <param name="end">Position of the end of the line.</param>
             <param name="referenceFrame">Reference frame that the positions are in.</param>
             <param name="visible">Whether the line is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Service.AddPolygon(System.Collections.Generic.IList{KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double}},KRPC.Client.Services.SpaceCenter.ReferenceFrame,System.Boolean)">
             <summary>
             Draw a polygon in the scene, defined by a list of vertices.
             </summary>
             <param name="vertices">Vertices of the polygon.</param>
             <param name="referenceFrame">Reference frame that the vertices are in.</param>
             <param name="visible">Whether the polygon is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Service.AddText(System.String,KRPC.Client.Services.SpaceCenter.ReferenceFrame,KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double,System.Double},System.Boolean)">
             <summary>
             Draw text in the scene.
             </summary>
             <param name="text">The string to draw.</param>
             <param name="referenceFrame">Reference frame that the text position is in.</param>
             <param name="position">Position of the text.</param>
             <param name="rotation">Rotation of the text, as a quaternion.</param>
             <param name="visible">Whether the text is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Service.Clear(System.Boolean)">
             <summary>
             Remove all objects being drawn.
             </summary>
             <param name="clientOnly">If true, only remove objects created by the calling client.</param>
            </member>
        <member name="T:KRPC.Client.Services.Drawing.Line">
             <summary>
             A line. Created using <see cref="M:Drawing.AddLine" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Line.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Line.Remove">
             <summary>
             Remove the object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.Color">
             <summary>
             Set the color
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.End">
             <summary>
             End position of the line.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.Material">
             <summary>
             Material used to render the object.
             Creates the material from a shader with the given name.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.ReferenceFrame">
             <summary>
             Reference frame for the positions of the object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.Start">
             <summary>
             Start position of the line.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.Thickness">
             <summary>
             Set the thickness
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Line.Visible">
             <summary>
             Whether the object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.Drawing.Polygon">
             <summary>
             A polygon. Created using <see cref="M:Drawing.AddPolygon" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Polygon.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Polygon.Remove">
             <summary>
             Remove the object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Polygon.Color">
             <summary>
             Set the color
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Polygon.Material">
             <summary>
             Material used to render the object.
             Creates the material from a shader with the given name.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Polygon.ReferenceFrame">
             <summary>
             Reference frame for the positions of the object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Polygon.Thickness">
             <summary>
             Set the thickness
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Polygon.Vertices">
             <summary>
             Vertices for the polygon.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Polygon.Visible">
             <summary>
             Whether the object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.Drawing.Text">
             <summary>
             Text. Created using <see cref="M:Drawing.AddText" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Text.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Text.Remove">
             <summary>
             Remove the object.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.Drawing.Text.AvailableFonts(KRPC.Client.IConnection)">
             <summary>
             A list of all available fonts.
             </summary>
             <param name="connection">A connection object.</param>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Alignment">
             <summary>
             Alignment.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Anchor">
             <summary>
             Anchor.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.CharacterSize">
             <summary>
             Character size.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Color">
             <summary>
             Set the color
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Content">
             <summary>
             The text string
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Font">
             <summary>
             Name of the font
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.LineSpacing">
             <summary>
             Line spacing.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Material">
             <summary>
             Material used to render the object.
             Creates the material from a shader with the given name.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Position">
             <summary>
             Position of the text.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.ReferenceFrame">
             <summary>
             Reference frame for the positions of the object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Rotation">
             <summary>
             Rotation of the text as a quaternion.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Size">
             <summary>
             Font size.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Style">
             <summary>
             Font style.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.Drawing.Text.Visible">
             <summary>
             Whether the object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.InfernalRobotics.ExtensionMethods">
             <summary>
             Extension methods for InfernalRobotics service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ExtensionMethods.InfernalRobotics(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the InfernalRobotics service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.InfernalRobotics.Service">
             <summary>
             InfernalRobotics service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Service.ServoGroupWithName(KRPC.Client.Services.SpaceCenter.Vessel,System.String)">
             <summary>
             Returns the servo group in the given <paramref name="vessel" /> with the given <paramref name="name" />,
             or <c>null</c> if none exists. If multiple servo groups have the same name, only one of them is returned.
             </summary>
             <param name="vessel">Vessel to check.</param>
             <param name="name">Name of servo group to find.</param>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Service.ServoGroups(KRPC.Client.Services.SpaceCenter.Vessel)">
             <summary>
             A list of all the servo groups in the given <paramref name="vessel" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Service.ServoWithName(KRPC.Client.Services.SpaceCenter.Vessel,System.String)">
             <summary>
             Returns the servo in the given <paramref name="vessel" /> with the given <paramref name="name" /> or
             <c>null</c> if none exists. If multiple servos have the same name, only one of them is returned.
             </summary>
             <param name="vessel">Vessel to check.</param>
             <param name="name">Name of the servo to find.</param>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Service.Available">
             <summary>
             Whether Infernal Robotics is installed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Service.Ready">
             <summary>
             Whether Infernal Robotics API is ready.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.InfernalRobotics.Servo">
             <summary>
             Represents a servo. Obtained using
             <see cref="M:InfernalRobotics.ServoGroup.Servos" />,
             <see cref="M:InfernalRobotics.ServoGroup.ServoWithName" />
             or <see cref="M:InfernalRobotics.ServoWithName" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.MoveCenter">
             <summary>
             Moves the servo to the center.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.MoveLeft">
             <summary>
             Moves the servo to the left.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.MoveNextPreset">
             <summary>
             Moves the servo to the next preset.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.MovePrevPreset">
             <summary>
             Moves the servo to the previous preset.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.MoveRight">
             <summary>
             Moves the servo to the right.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.MoveTo(System.Single,System.Single)">
             <summary>
             Moves the servo to <paramref name="position" /> and sets the
             speed multiplier to <paramref name="speed" />.
             </summary>
             <param name="position">The position to move the servo to.</param>
             <param name="speed">Speed multiplier for the movement.</param>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.Servo.Stop">
             <summary>
             Stops the servo.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.Acceleration">
             <summary>
             The current speed multiplier set in the UI.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.ConfigSpeed">
             <summary>
             The speed multiplier of the servo, specified by the part configuration.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.CurrentSpeed">
             <summary>
             The current speed at which the servo is moving.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.Highlight">
             <summary>
             Whether the servo should be highlighted in-game.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.IsAxisInverted">
             <summary>
             Whether the servos axis is inverted.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.IsFreeMoving">
             <summary>
             Whether the servo is freely moving.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.IsLocked">
             <summary>
             Whether the servo is locked.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.IsMoving">
             <summary>
             Whether the servo is moving.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.MaxConfigPosition">
             <summary>
             The maximum position of the servo, specified by the part configuration.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.MaxPosition">
             <summary>
             The maximum position of the servo, specified by the in-game tweak menu.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.MinConfigPosition">
             <summary>
             The minimum position of the servo, specified by the part configuration.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.MinPosition">
             <summary>
             The minimum position of the servo, specified by the in-game tweak menu.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.Name">
             <summary>
             The name of the servo.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.Part">
             <summary>
             The part containing the servo.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.Position">
             <summary>
             The position of the servo.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.Servo.Speed">
             <summary>
             The speed multiplier of the servo, specified by the in-game tweak menu.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.InfernalRobotics.ServoGroup">
             <summary>
             A group of servos, obtained by calling <see cref="M:InfernalRobotics.ServoGroups" />
             or <see cref="M:InfernalRobotics.ServoGroupWithName" />. Represents the "Servo Groups"
             in the InfernalRobotics UI.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.MoveCenter">
             <summary>
             Moves all of the servos in the group to the center.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.MoveLeft">
             <summary>
             Moves all of the servos in the group to the left.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.MoveNextPreset">
             <summary>
             Moves all of the servos in the group to the next preset.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.MovePrevPreset">
             <summary>
             Moves all of the servos in the group to the previous preset.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.MoveRight">
             <summary>
             Moves all of the servos in the group to the right.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.ServoWithName(System.String)">
             <summary>
             Returns the servo with the given <paramref name="name" /> from this group,
             or <c>null</c> if none exists.
             </summary>
             <param name="name">Name of servo to find.</param>
            </member>
        <member name="M:KRPC.Client.Services.InfernalRobotics.ServoGroup.Stop">
             <summary>
             Stops the servos in the group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.Expanded">
             <summary>
             Whether the group is expanded in the InfernalRobotics UI.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.ForwardKey">
             <summary>
             The key assigned to be the "forward" key for the group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.Name">
             <summary>
             The name of the group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.Parts">
             <summary>
             The parts containing the servos in the group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.ReverseKey">
             <summary>
             The key assigned to be the "reverse" key for the group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.Servos">
             <summary>
             The servos that are in the group.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.InfernalRobotics.ServoGroup.Speed">
             <summary>
             The speed multiplier for the group.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KerbalAlarmClock.ExtensionMethods">
             <summary>
             Extension methods for KerbalAlarmClock service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KerbalAlarmClock.ExtensionMethods.KerbalAlarmClock(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the KerbalAlarmClock service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KerbalAlarmClock.Service">
             <summary>
             KerbalAlarmClock service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KerbalAlarmClock.Service.AlarmWithName(System.String)">
             <summary>
             Get the alarm with the given <paramref name="name" />, or <c>null</c>
             if no alarms have that name. If more than one alarm has the name,
             only returns one of them.
             </summary>
             <param name="name">Name of the alarm to search for.</param>
            </member>
        <member name="M:KRPC.Client.Services.KerbalAlarmClock.Service.AlarmsWithType(KRPC.Client.Services.KerbalAlarmClock.AlarmType)">
             <summary>
             Get a list of alarms of the specified <paramref name="type" />.
             </summary>
             <param name="type">Type of alarm to return.</param>
            </member>
        <member name="M:KRPC.Client.Services.KerbalAlarmClock.Service.CreateAlarm(KRPC.Client.Services.KerbalAlarmClock.AlarmType,System.String,System.Double)">
             <summary>
             Create a new alarm and return it.
             </summary>
             <param name="type">Type of the new alarm.</param>
             <param name="name">Name of the new alarm.</param>
             <param name="ut">Time at which the new alarm should trigger.</param>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Service.Alarms">
             <summary>
             A list of all the alarms.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Service.Available">
             <summary>
             Whether Kerbal Alarm Clock is available.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KerbalAlarmClock.AlarmAction">
             <summary>
             The action performed by an alarm when it fires.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmAction.DoNothing">
             <summary>
             Don't do anything at all...
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmAction.DoNothingDeleteWhenPassed">
             <summary>
             Don't do anything, and delete the alarm.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmAction.KillWarp">
             <summary>
             Drop out of time warp.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmAction.KillWarpOnly">
             <summary>
             Drop out of time warp.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmAction.MessageOnly">
             <summary>
             Display a message.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmAction.PauseGame">
             <summary>
             Pause the game.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KerbalAlarmClock.AlarmType">
             <summary>
             The type of an alarm.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Raw">
             <summary>
             An alarm for a specific date/time or a specific period in the future.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Maneuver">
             <summary>
             An alarm based on the next maneuver node on the current ships flight path.
             This node will be stored and can be restored when you come back to the ship.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.ManeuverAuto">
             <summary>
             See <see cref="M:KerbalAlarmClock.AlarmType.Maneuver" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Apoapsis">
             <summary>
             An alarm for furthest part of the orbit from the planet.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Periapsis">
             <summary>
             An alarm for nearest part of the orbit from the planet.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.AscendingNode">
             <summary>
             Ascending node for the targeted object, or equatorial ascending node.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.DescendingNode">
             <summary>
             Descending node for the targeted object, or equatorial descending node.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Closest">
             <summary>
             An alarm based on the closest approach of this vessel to the targeted
             vessel, some number of orbits into the future.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Contract">
             <summary>
             An alarm based on the expiry or deadline of contracts in career modes.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.ContractAuto">
             <summary>
             See <see cref="M:KerbalAlarmClock.AlarmType.Contract" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Crew">
             <summary>
             An alarm that is attached to a crew member.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Distance">
             <summary>
             An alarm that is triggered when a selected target comes within a chosen distance.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.EarthTime">
             <summary>
             An alarm based on the time in the "Earth" alternative Universe (aka the Real World).
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.LaunchRendevous">
             <summary>
             An alarm that fires as your landed craft passes under the orbit of your target.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.SOIChange">
             <summary>
             An alarm manually based on when the next SOI point is on the flight path
             or set to continually monitor the active flight path and add alarms as it
             detects SOI changes.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.SOIChangeAuto">
             <summary>
             See <see cref="M:KerbalAlarmClock.AlarmType.SOIChange" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.Transfer">
             <summary>
             An alarm based on Interplanetary Transfer Phase Angles, i.e. when should
             I launch to planet X? Based on Kosmo Not's post and used in Olex's
             Calculator.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.KerbalAlarmClock.AlarmType.TransferModelled">
             <summary>
             See <see cref="M:KerbalAlarmClock.AlarmType.Transfer" />.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.KerbalAlarmClock.Alarm">
             <summary>
             Represents an alarm. Obtained by calling
             <see cref="M:KerbalAlarmClock.Alarms" />,
             <see cref="M:KerbalAlarmClock.AlarmWithName" /> or
             <see cref="M:KerbalAlarmClock.AlarmsWithType" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KerbalAlarmClock.Alarm.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.KerbalAlarmClock.Alarm.Remove">
             <summary>
             Removes the alarm.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Action">
             <summary>
             The action that the alarm triggers.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.ID">
             <summary>
             The unique identifier for the alarm.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Margin">
             <summary>
             The number of seconds before the event that the alarm will fire.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Name">
             <summary>
             The short name of the alarm.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Notes">
             <summary>
             The long description of the alarm.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Remaining">
             <summary>
             The number of seconds until the alarm will fire.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Repeat">
             <summary>
             Whether the alarm will be repeated after it has fired.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.RepeatPeriod">
             <summary>
             The time delay to automatically create an alarm after it has fired.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Time">
             <summary>
             The time at which the alarm will fire.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Type">
             <summary>
             The type of the alarm.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.Vessel">
             <summary>
             The vessel that the alarm is attached to.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.XferOriginBody">
             <summary>
             The celestial body the vessel is departing from.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.KerbalAlarmClock.Alarm.XferTargetBody">
             <summary>
             The celestial body the vessel is arriving at.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.RemoteTech.ExtensionMethods">
             <summary>
             Extension methods for RemoteTech service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.RemoteTech.ExtensionMethods.RemoteTech(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the RemoteTech service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.RemoteTech.Service">
             <summary>
             RemoteTech service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.RemoteTech.Service.Antenna(KRPC.Client.Services.SpaceCenter.Part)">
             <summary>
             Get the antenna object for a particular part.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.RemoteTech.Service.Comms(KRPC.Client.Services.SpaceCenter.Vessel)">
             <summary>
             Get a communications object, representing the communication capability of a particular vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Service.Available">
             <summary>
             Whether RemoteTech is installed.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Service.GroundStations">
             <summary>
             The names of the ground stations.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.RemoteTech.Target">
             <summary>
             The type of object an antenna is targetting.
             See <see cref="M:RemoteTech.Antenna.Target" />.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.RemoteTech.Target.ActiveVessel">
             <summary>
             The active vessel.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.RemoteTech.Target.CelestialBody">
             <summary>
             A celestial body.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.RemoteTech.Target.GroundStation">
             <summary>
             A ground station.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.RemoteTech.Target.Vessel">
             <summary>
             A specific vessel.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.RemoteTech.Target.None">
             <summary>
             No target.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.RemoteTech.Antenna">
             <summary>
             A RemoteTech antenna. Obtained by calling <see cref="M:RemoteTech.Comms.Antennas" /> or <see cref="M:RemoteTech.Antenna" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.RemoteTech.Antenna.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Antenna.HasConnection">
             <summary>
             Whether the antenna has a connection.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Antenna.Part">
             <summary>
             Get the part containing this antenna.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Antenna.Target">
             <summary>
             The object that the antenna is targetting.
             This property can be used to set the target to <see cref="M:RemoteTech.Target.None" /> or <see cref="M:RemoteTech.Target.ActiveVessel" />.
             To set the target to a celestial body, ground station or vessel see <see cref="M:RemoteTech.Antenna.TargetBody" />,
             <see cref="M:RemoteTech.Antenna.TargetGroundStation" /> and <see cref="M:RemoteTech.Antenna.TargetVessel" />.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Antenna.TargetBody">
             <summary>
             The celestial body the antenna is targetting.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Antenna.TargetGroundStation">
             <summary>
             The ground station the antenna is targetting.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Antenna.TargetVessel">
             <summary>
             The vessel the antenna is targetting.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.RemoteTech.Comms">
             <summary>
             Communications for a vessel.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.RemoteTech.Comms.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.RemoteTech.Comms.SignalDelayToVessel(KRPC.Client.Services.SpaceCenter.Vessel)">
             <summary>
             The signal delay between the this vessel and another vessel, in seconds.
             </summary>
             <param name="other"></param>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.Antennas">
             <summary>
             The antennas for this vessel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.HasConnection">
             <summary>
             Whether the vessel has any connection.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.HasConnectionToGroundStation">
             <summary>
             Whether the vessel has a connection to a ground station.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.HasFlightComputer">
             <summary>
             Whether the vessel has a flight computer on board.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.HasLocalControl">
             <summary>
             Whether the vessel can be controlled locally.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.SignalDelay">
             <summary>
             The shortest signal delay to the vessel, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.SignalDelayToGroundStation">
             <summary>
             The signal delay between the vessel and the closest ground station, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.RemoteTech.Comms.Vessel">
             <summary>
             Get the vessel.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.ExtensionMethods">
             <summary>
             Extension methods for UI service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.ExtensionMethods.UI(KRPC.Client.IConnection)">
             <summary>
             Create an instance of the UI service.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.Service">
             <summary>
             UI service.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Service.AddCanvas">
             <summary>
             Add a new canvas.
             </summary>
             <remarks>
             If you want to add UI elements to KSPs stock UI canvas, use <see cref="M:UI.StockCanvas" />.
             </remarks>
            </member>
        <member name="M:KRPC.Client.Services.UI.Service.Clear(System.Boolean)">
             <summary>
             Remove all user interface elements.
             </summary>
             <param name="clientOnly">If true, only remove objects created by the calling client.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Service.Message(System.String,System.Single,KRPC.Client.Services.UI.MessagePosition,KRPC.Client.Compatibility.Tuple{System.Double,System.Double,System.Double},System.Single)">
             <summary>
             Display a message on the screen.
             </summary>
             <remarks>
             The message appears just like a stock message, for example quicksave or quickload messages.
             </remarks>
             <param name="content">Message content.</param>
             <param name="duration">Duration before the message disappears, in seconds.</param>
             <param name="position">Position to display the message.</param>
             <param name="size">Size of the message, differs per position.</param>
             <param name="color">The color of the message.</param>
            </member>
        <member name="P:KRPC.Client.Services.UI.Service.StockCanvas">
             <summary>
             The stock UI canvas.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.FontStyle">
             <summary>
             Font style.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.FontStyle.Normal">
             <summary>
             Normal.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.FontStyle.Bold">
             <summary>
             Bold.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.FontStyle.Italic">
             <summary>
             Italic.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.FontStyle.BoldAndItalic">
             <summary>
             Bold and italic.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.MessagePosition">
             <summary>
             Message position.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.MessagePosition.BottomCenter">
             <summary>
             Bottom center.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.MessagePosition.TopCenter">
             <summary>
             Top center.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.MessagePosition.TopLeft">
             <summary>
             Top left.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.MessagePosition.TopRight">
             <summary>
             Top right.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.TextAlignment">
             <summary>
             Text alignment.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAlignment.Left">
             <summary>
             Left aligned.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAlignment.Right">
             <summary>
             Right aligned.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAlignment.Center">
             <summary>
             Center aligned.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.TextAnchor">
             <summary>
             Text alignment.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.LowerCenter">
             <summary>
             Lower center.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.LowerLeft">
             <summary>
             Lower left.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.LowerRight">
             <summary>
             Lower right.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.MiddleCenter">
             <summary>
             Middle center.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.MiddleLeft">
             <summary>
             Middle left.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.MiddleRight">
             <summary>
             Middle right.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.UpperCenter">
             <summary>
             Upper center.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.UpperLeft">
             <summary>
             Upper left.
             </summary>
            </member>
        <member name="F:KRPC.Client.Services.UI.TextAnchor.UpperRight">
             <summary>
             Upper right.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.Button">
             <summary>
             A text label. See <see cref="M:UI.Panel.AddButton" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Button.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Button.Remove">
             <summary>
             Remove the UI object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Button.Clicked">
             <summary>
             Whether the button has been clicked.
             </summary>
             <remarks>
             This property is set to true when the user clicks the button.
             A client script should reset the property to false in order to detect subsequent button presses.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.UI.Button.RectTransform">
             <summary>
             The rect transform for the text.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Button.Text">
             <summary>
             The text for the button.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Button.Visible">
             <summary>
             Whether the UI object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.Canvas">
             <summary>
             A canvas for user interface elements. See <see cref="M:UI.StockCanvas" /> and <see cref="M:UI.AddCanvas" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Canvas.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Canvas.AddButton(System.String,System.Boolean)">
             <summary>
             Add a button to the canvas.
             </summary>
             <param name="content">The label for the button.</param>
             <param name="visible">Whether the button is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Canvas.AddInputField(System.Boolean)">
             <summary>
             Add an input field to the canvas.
             </summary>
             <param name="visible">Whether the input field is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Canvas.AddPanel(System.Boolean)">
             <summary>
             Create a new container for user interface elements.
             </summary>
             <param name="visible">Whether the panel is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Canvas.AddText(System.String,System.Boolean)">
             <summary>
             Add text to the canvas.
             </summary>
             <param name="content">The text.</param>
             <param name="visible">Whether the text is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Canvas.Remove">
             <summary>
             Remove the UI object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Canvas.RectTransform">
             <summary>
             The rect transform for the canvas.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Canvas.Visible">
             <summary>
             Whether the UI object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.InputField">
             <summary>
             An input field. See <see cref="M:UI.Panel.AddInputField" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.InputField.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.InputField.Remove">
             <summary>
             Remove the UI object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.InputField.Changed">
             <summary>
             Whether the input field has been changed.
             </summary>
             <remarks>
             This property is set to true when the user modifies the value of the input field.
             A client script should reset the property to false in order to detect subsequent changes.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.UI.InputField.RectTransform">
             <summary>
             The rect transform for the input field.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.InputField.Text">
             <summary>
             The text component of the input field.
             </summary>
             <remarks>
             Use <see cref="M:UI.InputField.Value" /> to get and set the value in the field.
             This object can be used to alter the style of the input field's text.
             </remarks>
            </member>
        <member name="P:KRPC.Client.Services.UI.InputField.Value">
             <summary>
             The value of the input field.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.InputField.Visible">
             <summary>
             Whether the UI object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.Panel">
             <summary>
             A container for user interface elements. See <see cref="M:UI.Canvas.AddPanel" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Panel.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Panel.AddButton(System.String,System.Boolean)">
             <summary>
             Add a button to the panel.
             </summary>
             <param name="content">The label for the button.</param>
             <param name="visible">Whether the button is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Panel.AddInputField(System.Boolean)">
             <summary>
             Add an input field to the panel.
             </summary>
             <param name="visible">Whether the input field is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Panel.AddPanel(System.Boolean)">
             <summary>
             Create a panel within this panel.
             </summary>
             <param name="visible">Whether the new panel is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Panel.AddText(System.String,System.Boolean)">
             <summary>
             Add text to the panel.
             </summary>
             <param name="content">The text.</param>
             <param name="visible">Whether the text is visible.</param>
            </member>
        <member name="M:KRPC.Client.Services.UI.Panel.Remove">
             <summary>
             Remove the UI object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Panel.RectTransform">
             <summary>
             The rect transform for the panel.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Panel.Visible">
             <summary>
             Whether the UI object is visible.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.RectTransform">
             <summary>
             A Unity engine Rect Transform for a UI object.
             See the <a href="https://docs.unity3d.com/Manual/class-RectTransform.html">Unity manual</a> for more details.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.RectTransform.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.Anchor">
             <summary>
             Set the minimum and maximum anchor points as a fraction of the size of the parent rectangle.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.AnchorMax">
             <summary>
             The anchor point for the lower left corner of the rectangle defined as a fraction of the size of the parent rectangle.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.AnchorMin">
             <summary>
             The anchor point for the upper right corner of the rectangle defined as a fraction of the size of the parent rectangle.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.LocalPosition">
             <summary>
             Position of the rectangles pivot point relative to the anchors.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.LowerLeft">
             <summary>
             Position of the rectangles lower left corner relative to the anchors.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.Pivot">
             <summary>
             Location of the pivot point around which the rectangle rotates, defined as a fraction of the size of the rectangle itself.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.Position">
             <summary>
             Position of the rectangles pivot point relative to the anchors.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.Rotation">
             <summary>
             Rotation, as a quaternion, of the object around its pivot point.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.Scale">
             <summary>
             Scale factor applied to the object in the x, y and z dimensions.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.Size">
             <summary>
             Width and height of the rectangle.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.RectTransform.UpperRight">
             <summary>
             Position of the rectangles upper right corner relative to the anchors.
             </summary>
            </member>
        <member name="T:KRPC.Client.Services.UI.Text">
             <summary>
             A text label. See <see cref="M:UI.Panel.AddText" />.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Text.#ctor(KRPC.Client.IConnection,System.UInt64)">
             <summary>
             Construct an instance of this remote object. Should not be called directly. This interface is intended for internal decoding.
             </summary>
            </member>
        <member name="M:KRPC.Client.Services.UI.Text.Remove">
             <summary>
             Remove the UI object.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Alignment">
             <summary>
             Alignment.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.AvailableFonts">
             <summary>
             A list of all available fonts.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Color">
             <summary>
             Set the color
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Content">
             <summary>
             The text string
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Font">
             <summary>
             Name of the font
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.LineSpacing">
             <summary>
             Line spacing.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.RectTransform">
             <summary>
             The rect transform for the text.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Size">
             <summary>
             Font size.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Style">
             <summary>
             Font style.
             </summary>
            </member>
        <member name="P:KRPC.Client.Services.UI.Text.Visible">
             <summary>
             Whether the UI object is visible.
             </summary>
            </member>
    </members>
</doc>
